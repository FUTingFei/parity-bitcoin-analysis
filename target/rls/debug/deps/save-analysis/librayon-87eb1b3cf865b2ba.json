{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1","program":"/Users/ftf/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rayon","/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","panic=abort","-C","debuginfo=2","-C","metadata=87eb1b3cf865b2ba","-C","extra-filename=-87eb1b3cf865b2ba","--out-dir","/Users/ftf/workspace/parity-bitcoin-analysis/target/rls/debug/deps","-L","dependency=/Users/ftf/workspace/parity-bitcoin-analysis/target/rls/debug/deps","--extern","either=/Users/ftf/workspace/parity-bitcoin-analysis/target/rls/debug/deps/libeither-c4879a02c57961db.rmeta","--extern","rayon_core=/Users/ftf/workspace/parity-bitcoin-analysis/target/rls/debug/deps/librayon_core-d54f51faef2082fb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/ftf/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/ftf/workspace/parity-bitcoin-analysis/target/rls/debug/deps/librayon-87eb1b3cf865b2ba.rmeta"},"prelude":{"crate_id":{"name":"rayon","disambiguator":[2568549704765099250,2471017138095373974]},"crate_root":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src","external_crates":[{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8106311790213343624,8955386895799845337]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4005401412862751838,10428951584609828155]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13095010483096482717,4206053056286564539]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11763715825204258428,844497751288077839]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12828643918913867774,11782824976344281294]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6904254435091247090,18371361969673227101]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4378847577036072991,15026153357663168629]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11052382395475291102,13781871357446175268]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10846364115163072086,995811513296267536]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5237820243614741634,12979549998808708609]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[9343187026477242795,15227309607718994713]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7288168950848637900,4057641189599078398]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[10668628030226272726,236080469054931654]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8067095231028320138,1808744449370434750]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":15,"id":{"name":"rayon_core","disambiguator":[681167837940640283,5176605855796999208]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":16,"id":{"name":"crossbeam_deque","disambiguator":[10485379987953033019,11830758977625904664]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":17,"id":{"name":"crossbeam_epoch","disambiguator":[12156487244699573790,15807259858467441786]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":18,"id":{"name":"nodrop","disambiguator":[16059388760826129057,17828260638142219630]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":19,"id":{"name":"arrayvec","disambiguator":[8720082156267846358,9867561885227749956]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":20,"id":{"name":"crossbeam_utils","disambiguator":[8252889948505560373,11167996845832008006]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[441897307393847926,9434998221621978825]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":22,"id":{"name":"lazy_static","disambiguator":[11811300670529671067,2381394543709157465]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":23,"id":{"name":"memoffset","disambiguator":[5229569141193828665,6160966490235329722]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":24,"id":{"name":"scopeguard","disambiguator":[5264216832625946242,1168690108524711142]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":25,"id":{"name":"libc","disambiguator":[17930219650955604071,15953545991653226092]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":26,"id":{"name":"num_cpus","disambiguator":[199803311509850703,4000621668700481693]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":27,"id":{"name":"rand","disambiguator":[6339732727648554560,15596925147346495972]}},{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","num":28,"id":{"name":"either","disambiguator":[11189132335738630042,9550745813240964380]}}],"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":0,"byte_end":4300,"line_start":1,"line_end":117,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":28,"index":121},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":24949,"byte_end":24955,"line_start":70,"line_end":70,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4348},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":25719,"byte_end":25724,"line_start":90,"line_end":90,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4361},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":25760,"byte_end":25766,"line_start":92,"line_end":92,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4371},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":25821,"byte_end":25830,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4380},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":25866,"byte_end":25872,"line_start":97,"line_end":97,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4389},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":25916,"byte_end":25925,"line_start":99,"line_end":99,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4398},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":25965,"byte_end":25972,"line_start":101,"line_end":101,"column_start":25,"column_end":32},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4407},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26010,"byte_end":26017,"line_start":103,"line_end":103,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4427},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26101,"byte_end":26105,"line_start":108,"line_end":108,"column_start":22,"column_end":26},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4439},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26107,"byte_end":26115,"line_start":108,"line_end":108,"column_start":28,"column_end":36},"alias_span":null,"name":"FoldWith","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4451},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26160,"byte_end":26164,"line_start":111,"line_end":111,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26205,"byte_end":26210,"line_start":113,"line_end":113,"column_start":26,"column_end":31},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4461},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26212,"byte_end":26217,"line_start":113,"line_end":113,"column_start":33,"column_end":38},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4470},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26250,"byte_end":26254,"line_start":115,"line_end":115,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4480},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26284,"byte_end":26287,"line_start":117,"line_end":117,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4489},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26327,"byte_end":26334,"line_start":119,"line_end":119,"column_start":25,"column_end":32},"alias_span":null,"name":"MapWith","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4501},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26364,"byte_end":26367,"line_start":121,"line_end":121,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4514},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26403,"byte_end":26408,"line_start":123,"line_end":123,"column_start":23,"column_end":28},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4526},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26452,"byte_end":26462,"line_start":125,"line_end":125,"column_start":27,"column_end":37},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4539},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26524,"byte_end":26542,"line_start":127,"line_end":127,"column_start":36,"column_end":54},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4551},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26588,"byte_end":26599,"line_start":129,"line_end":129,"column_start":28,"column_end":39},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4561},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26635,"byte_end":26641,"line_start":131,"line_end":131,"column_start":23,"column_end":29},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4583},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26682,"byte_end":26685,"line_start":135,"line_end":135,"column_start":20,"column_end":23},"alias_span":null,"name":"Rev","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4592},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26716,"byte_end":26722,"line_start":137,"line_end":137,"column_start":21,"column_end":27},"alias_span":null,"name":"MinLen","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4602},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26724,"byte_end":26730,"line_start":137,"line_end":137,"column_start":29,"column_end":35},"alias_span":null,"name":"MaxLen","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4612},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26789,"byte_end":26795,"line_start":141,"line_end":141,"column_start":23,"column_end":29},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4621},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26833,"byte_end":26840,"line_start":143,"line_end":143,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4630},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26884,"byte_end":26893,"line_start":145,"line_end":145,"column_start":27,"column_end":36},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4639},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26953,"byte_end":26959,"line_start":149,"line_end":149,"column_start":24,"column_end":30},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":2781},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26961,"byte_end":26967,"line_start":149,"line_end":149,"column_start":32,"column_end":38},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4648},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26993,"byte_end":27000,"line_start":150,"line_end":150,"column_start":24,"column_end":31},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":2802},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":27002,"byte_end":27009,"line_start":150,"line_end":150,"column_start":33,"column_end":40},"alias_span":null,"name":"repeatn","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":2856},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":27046,"byte_end":27051,"line_start":153,"line_end":153,"column_start":23,"column_end":28},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":2854},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":27053,"byte_end":27058,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4658},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":27092,"byte_end":27096,"line_start":155,"line_end":155,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":2896},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":27098,"byte_end":27102,"line_start":155,"line_end":155,"column_start":28,"column_end":32},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":3117},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","byte_start":304331,"byte_end":304351,"line_start":5,"line_end":5,"column_start":15,"column_end":35},"alias_span":null,"name":"FromParallelIterator","value":"","parent":{"krate":0,"index":3182}},{"kind":"Use","ref_id":{"krate":0,"index":2914},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","byte_start":304367,"byte_end":304387,"line_start":6,"line_end":6,"column_start":15,"column_end":35},"alias_span":null,"name":"IntoParallelIterator","value":"","parent":{"krate":0,"index":3182}},{"kind":"Use","ref_id":{"krate":0,"index":2918},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","byte_start":304403,"byte_end":304426,"line_start":7,"line_end":7,"column_start":15,"column_end":38},"alias_span":null,"name":"IntoParallelRefIterator","value":"","parent":{"krate":0,"index":3182}},{"kind":"Use","ref_id":{"krate":0,"index":2929},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","byte_start":304442,"byte_end":304468,"line_start":8,"line_end":8,"column_start":15,"column_end":41},"alias_span":null,"name":"IntoParallelRefMutIterator","value":"","parent":{"krate":0,"index":3182}},{"kind":"Use","ref_id":{"krate":0,"index":3057},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","byte_start":304484,"byte_end":304507,"line_start":9,"line_end":9,"column_start":15,"column_end":38},"alias_span":null,"name":"IndexedParallelIterator","value":"","parent":{"krate":0,"index":3182}},{"kind":"Use","ref_id":{"krate":0,"index":3121},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","byte_start":304523,"byte_end":304537,"line_start":10,"line_end":10,"column_start":15,"column_end":29},"alias_span":null,"name":"ParallelExtend","value":"","parent":{"krate":0,"index":3182}},{"kind":"Use","ref_id":{"krate":0,"index":2940},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","byte_start":304553,"byte_end":304569,"line_start":11,"line_end":11,"column_start":15,"column_end":31},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":3182}},{"kind":"Use","ref_id":{"krate":0,"index":3425},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","byte_start":304586,"byte_end":304599,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"alias_span":null,"name":"ParallelSlice","value":"","parent":{"krate":0,"index":3182}},{"kind":"Use","ref_id":{"krate":0,"index":3435},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","byte_start":304616,"byte_end":304632,"line_start":13,"line_end":13,"column_start":16,"column_end":32},"alias_span":null,"name":"ParallelSliceMut","value":"","parent":{"krate":0,"index":3182}},{"kind":"Use","ref_id":{"krate":0,"index":3702},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","byte_start":304647,"byte_end":304661,"line_start":14,"line_end":14,"column_start":14,"column_end":28},"alias_span":null,"name":"ParallelString","value":"","parent":{"krate":0,"index":3182}},{"kind":"Use","ref_id":{"krate":15,"index":479},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":4031,"byte_end":4050,"line_start":110,"line_end":110,"column_start":21,"column_end":40},"alias_span":null,"name":"current_num_threads","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":415},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":4072,"byte_end":4082,"line_start":111,"line_end":111,"column_start":21,"column_end":31},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":666},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":4104,"byte_end":4121,"line_start":112,"line_end":112,"column_start":21,"column_end":38},"alias_span":null,"name":"ThreadPoolBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":654},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":4143,"byte_end":4163,"line_start":113,"line_end":113,"column_start":21,"column_end":41},"alias_span":null,"name":"ThreadPoolBuildError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":96},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":4186,"byte_end":4190,"line_start":114,"line_end":114,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":103},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":4192,"byte_end":4204,"line_start":114,"line_end":114,"column_start":28,"column_end":40},"alias_span":null,"name":"join_context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":680},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":4227,"byte_end":4236,"line_start":115,"line_end":115,"column_start":21,"column_end":30},"alias_span":null,"name":"FnContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":334},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":4259,"byte_end":4264,"line_start":116,"line_end":116,"column_start":22,"column_end":27},"alias_span":null,"name":"scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":327},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":4266,"byte_end":4271,"line_start":116,"line_end":116,"column_start":29,"column_end":34},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":394},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":4294,"byte_end":4299,"line_start":117,"line_end":117,"column_start":21,"column_end":26},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":0,"byte_end":4300,"line_start":1,"line_end":117,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":22},{"krate":0,"index":59},{"krate":0,"index":150},{"krate":0,"index":3125},{"krate":0,"index":3182},{"krate":0,"index":3193},{"krate":0,"index":3212},{"krate":0,"index":3249},{"krate":0,"index":3694},{"krate":0,"index":3814},{"krate":0,"index":3875},{"krate":0,"index":3902},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3915}],"decl_id":null,"docs":" Data-parallelism library that makes it easy to convert sequential\n computations into parallel","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":53,"byte_end":92,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":185,"byte_end":207,"line_start":5,"line_end":5,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/private.rs","byte_start":6817,"byte_end":6830,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/private.rs","byte_start":6766,"byte_end":6805,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":75},{"krate":0,"index":85},{"krate":0,"index":94},{"krate":0,"index":107},{"krate":0,"index":119},{"krate":0,"index":128}],"decl_id":null,"docs":" Parallel iterator types for [standard collections][std::collections]","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":61},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/binary_heap.rs","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":3916},{"krate":0,"index":3922},{"krate":0,"index":3919},{"krate":0,"index":66},{"krate":0,"index":3932},{"krate":0,"index":3925},{"krate":0,"index":3938},{"krate":0,"index":3942},{"krate":0,"index":71},{"krate":0,"index":3946},{"krate":0,"index":3961},{"krate":0,"index":3953}],"decl_id":null,"docs":" This module contains the parallel iterator types for heaps\n (`BinaryHeap<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3916},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/binary_heap.rs","byte_start":12601,"byte_end":12609,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::binary_heap::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":3918}],"decl_id":null,"docs":" Parallel iterator over a binary heap\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3938},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/binary_heap.rs","byte_start":13054,"byte_end":13058,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3941}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a binary heap\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_map.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":3968},{"krate":0,"index":3972},{"krate":0,"index":3976},{"krate":0,"index":3983},{"krate":0,"index":3990},{"krate":0,"index":3995},{"krate":0,"index":80},{"krate":0,"index":4000},{"krate":0,"index":4008},{"krate":0,"index":4016},{"krate":0,"index":4021},{"krate":0,"index":4026},{"krate":0,"index":4034}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree maps\n (`BTreeMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3968},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_map.rs","byte_start":13850,"byte_end":13858,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":3971}],"decl_id":null,"docs":" Parallel iterator over a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3990},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_map.rs","byte_start":14192,"byte_end":14196,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3994}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4016},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_map.rs","byte_start":14721,"byte_end":14728,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::btree_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4020}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":85},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_set.rs","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":4042},{"krate":0,"index":4045},{"krate":0,"index":4048},{"krate":0,"index":4054},{"krate":0,"index":4060},{"krate":0,"index":4064},{"krate":0,"index":90},{"krate":0,"index":4068},{"krate":0,"index":4075}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree sets\n (`BTreeSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4042},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_set.rs","byte_start":15407,"byte_end":15415,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4044}],"decl_id":null,"docs":" Parallel iterator over a B-Tree set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4060},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_set.rs","byte_start":15703,"byte_end":15707,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4063}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree set\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":94},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_map.rs","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":4082},{"krate":0,"index":4086},{"krate":0,"index":4090},{"krate":0,"index":4098},{"krate":0,"index":4105},{"krate":0,"index":4110},{"krate":0,"index":102},{"krate":0,"index":4115},{"krate":0,"index":4124},{"krate":0,"index":4132},{"krate":0,"index":4137},{"krate":0,"index":4142},{"krate":0,"index":4151}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash maps\n (`HashMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4082},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_map.rs","byte_start":16522,"byte_end":16530,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4085}],"decl_id":null,"docs":" Parallel iterator over a hash map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4105},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_map.rs","byte_start":16898,"byte_end":16902,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4109}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4132},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_map.rs","byte_start":17467,"byte_end":17474,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hash_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4136}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a hash map\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":107},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_set.rs","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":4159},{"krate":0,"index":4162},{"krate":0,"index":4165},{"krate":0,"index":4172},{"krate":0,"index":4178},{"krate":0,"index":4182},{"krate":0,"index":115},{"krate":0,"index":4186},{"krate":0,"index":4194}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash sets\n (`HashSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4159},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_set.rs","byte_start":18219,"byte_end":18227,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4161}],"decl_id":null,"docs":" Parallel iterator over a hash set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4178},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_set.rs","byte_start":18549,"byte_end":18553,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4181}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash set\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":119},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linked_list","qualname":"::collections::linked_list","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/linked_list.rs","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":4201},{"krate":0,"index":4207},{"krate":0,"index":4204},{"krate":0,"index":4210},{"krate":0,"index":4216},{"krate":0,"index":4222},{"krate":0,"index":4226},{"krate":0,"index":124},{"krate":0,"index":4230},{"krate":0,"index":4237},{"krate":0,"index":4244},{"krate":0,"index":4248},{"krate":0,"index":4252},{"krate":0,"index":4259}],"decl_id":null,"docs":" This module contains the parallel iterator types for linked lists\n (`LinkedList<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4201},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/linked_list.rs","byte_start":19363,"byte_end":19371,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4203}],"decl_id":null,"docs":" Parallel iterator over a linked list\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4222},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/linked_list.rs","byte_start":19644,"byte_end":19648,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4225}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a linked list\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4244},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/linked_list.rs","byte_start":20076,"byte_end":20083,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::linked_list::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4247}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a linked list\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/vec_deque.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec_deque","qualname":"::collections::vec_deque","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/vec_deque.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":4266},{"krate":0,"index":4272},{"krate":0,"index":4269},{"krate":0,"index":4275},{"krate":0,"index":4288},{"krate":0,"index":4281},{"krate":0,"index":4294},{"krate":0,"index":4298},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":4310},{"krate":0,"index":4302},{"krate":0,"index":4317},{"krate":0,"index":4321},{"krate":0,"index":144},{"krate":0,"index":4333},{"krate":0,"index":4325}],"decl_id":null,"docs":" This module contains the parallel iterator types for double-ended queues\n (`VecDeque<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4266},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/vec_deque.rs","byte_start":20695,"byte_end":20703,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::vec_deque::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4268}],"decl_id":null,"docs":" Parallel iterator over a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4294},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/vec_deque.rs","byte_start":20989,"byte_end":20993,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec_deque::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4297}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4317},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/vec_deque.rs","byte_start":21639,"byte_end":21646,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec_deque::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4320}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":214},{"krate":0,"index":279},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":521},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":866},{"krate":0,"index":948},{"krate":0,"index":987},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1169},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":2001},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2177},{"krate":0,"index":2226},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2609},{"krate":0,"index":2776},{"krate":0,"index":2842},{"krate":0,"index":2845},{"krate":0,"index":2848},{"krate":0,"index":2890},{"krate":0,"index":2893},{"krate":0,"index":2911},{"krate":0,"index":2914},{"krate":0,"index":2918},{"krate":0,"index":2923},{"krate":0,"index":2929},{"krate":0,"index":2934},{"krate":0,"index":2940},{"krate":0,"index":3052},{"krate":0,"index":3057},{"krate":0,"index":3117},{"krate":0,"index":3121}],"decl_id":null,"docs":" Traits for writing parallel programs using an iterator-style interface","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4348},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":104377,"byte_end":104382,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Chain","qualname":"::iter::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":4351},{"krate":0,"index":4352}],"decl_id":null,"docs":" `Chain` is an iterator that joins `b` after `a` in one continuous iterator.\n This struct is created by the [`chain()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":104268,"byte_end":104341,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4361},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":111713,"byte_end":111719,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::iter::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":4363},{"krate":0,"index":4364}],"decl_id":null,"docs":" `Chunks` is an iterator that groups elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":111604,"byte_end":111677,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4371},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/enumerate.rs","byte_start":131476,"byte_end":131485,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::iter::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":4373}],"decl_id":null,"docs":" `Enumerate` is an iterator that returns the current count along with the element.\n This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/enumerate.rs","byte_start":131367,"byte_end":131440,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4380},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":134939,"byte_end":134945,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Filter","qualname":"::iter::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":4383},{"krate":0,"index":4384}],"decl_id":null,"docs":" `Filter` takes a predicate `filter_op` and filters out elements that match.\n This struct is created by the [`filter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":134837,"byte_end":134910,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4389},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":138472,"byte_end":138481,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::iter::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":4392},{"krate":0,"index":4393}],"decl_id":null,"docs":" `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.\n This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":138370,"byte_end":138443,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4398},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":142164,"byte_end":142171,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::iter::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":4401},{"krate":0,"index":4402}],"decl_id":null,"docs":" `FlatMap` maps each element to an iterator, then flattens these iterators together.\n This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":142062,"byte_end":142135,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4407},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flatten.rs","byte_start":146397,"byte_end":146404,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::iter::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4409}],"decl_id":null,"docs":" `Flatten` turns each element to an iterator, then flattens these iterators\n together. This struct is created by the [`flatten()`] method on\n [`ParallelIterator`].","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flatten.rs","byte_start":146288,"byte_end":146361,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":866},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"plumbing","qualname":"::iter::plumbing","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":876},{"krate":0,"index":885},{"krate":0,"index":893},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":908},{"krate":0,"index":4416},{"krate":0,"index":4419},{"krate":0,"index":4418},{"krate":0,"index":913},{"krate":0,"index":4421},{"krate":0,"index":4425},{"krate":0,"index":4424},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":932},{"krate":0,"index":940},{"krate":0,"index":943}],"decl_id":null,"docs":" Traits and functions used to implement parallel iteration.  These are\n low-level details -- users of parallel iterators should not need to\n interact with them directly.  See [the `plumbing` README][r] for a high-level overview.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":871},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":153757,"byte_end":153773,"line_start":21,"line_end":21,"column_start":11,"column_end":27},"name":"ProducerCallback","qualname":"::iter::plumbing::ProducerCallback","value":"ProducerCallback<T>","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874}],"decl_id":null,"docs":" The `ProducerCallback` trait is a kind of generic closure,\n [analogous to `FnOnce`][FnOnce]. See [the corresponding section in\n the plumbing README][r] for more details.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":873},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":154006,"byte_end":154012,"line_start":26,"line_end":26,"column_start":10,"column_end":16},"name":"Output","qualname":"::iter::plumbing::ProducerCallback::Output","value":"type Output;","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" The type of value returned by this callback. Analogous to\n [`Output` from the `FnOnce` trait][Output].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":154230,"byte_end":154238,"line_start":31,"line_end":31,"column_start":8,"column_end":16},"name":"callback","qualname":"::iter::plumbing::ProducerCallback::callback","value":"fn <P> (self, producer: P) -> Self::Output","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Invokes the callback with the given producer as argument. The\n key point of this trait is that this method is generic over\n `P`, and hence implementors must be defined for any producer.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":876},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":155700,"byte_end":155708,"line_start":58,"line_end":58,"column_start":11,"column_end":19},"name":"Producer","qualname":"::iter::plumbing::Producer","value":"Producer: Send + Sized","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883}],"decl_id":null,"docs":" A `Producer` is effectively a \"splittable `IntoIterator`\". That\n is, a producer is a value which can be converted into an iterator\n at any time: at that point, it simply produces items on demand,\n like any iterator. But what makes a `Producer` special is that,\n *before* we convert to an iterator, we can also **split** it at a\n particular point using the `split_at` method. This will yield up\n two producers, one producing the items before that point, and one\n producing the items after that point (these two producers can then\n independently be split further, or be converted into iterators).\n In Rayon, this splitting is used to divide between threads.\n See [the `plumbing` README][r] for further details.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":877},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":155845,"byte_end":155849,"line_start":61,"line_end":61,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::Producer::Item","value":"type Item;","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" The type of item that will be produced by this producer once\n it is converted into an iterator.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":878},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":155906,"byte_end":155914,"line_start":64,"line_end":64,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::iter::plumbing::Producer::IntoIter","value":"type IntoIter: Iterator<Item = Self::Item> + DoubleEndedIterator + ExactSizeIterator;","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" The type of iterator we will become.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":156097,"byte_end":156106,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"into_iter","qualname":"::iter::plumbing::Producer::into_iter","value":"fn (self) -> Self::IntoIter","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" Convert `self` into an iterator; at this point, no more parallel splits\n are possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":156709,"byte_end":156716,"line_start":80,"line_end":80,"column_start":8,"column_end":15},"name":"min_len","qualname":"::iter::plumbing::Producer::min_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" The minimum number of items that we will process\n sequentially. Defaults to 1, which means that we will split\n all the way down to a single item. This can be raised higher\n using the [`with_min_len`] method, which will force us to\n create sequential tasks at a larger granularity. Note that\n Rayon automatically normally attempts to adjust the size of\n parallel splits to reduce overhead, so this should not be\n needed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":157281,"byte_end":157288,"line_start":93,"line_end":93,"column_start":8,"column_end":15},"name":"max_len","qualname":"::iter::plumbing::Producer::max_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" The maximum number of items that we will process\n sequentially. Defaults to MAX, which means that we can choose\n not to split at all. This can be lowered using the\n [`with_max_len`] method, which will force us to create more\n parallel tasks. Note that Rayon automatically normally\n attempts to adjust the size of parallel splits to reduce\n overhead, so this should not be needed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":157476,"byte_end":157484,"line_start":99,"line_end":99,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Producer::split_at","value":"fn (self, index: usize) -> (Self, Self)","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" Split into two producers; one produces items `0..index`, the\n other `index..N`. Index must be less than or equal to `N`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":157751,"byte_end":157760,"line_start":105,"line_end":105,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::Producer::fold_with","value":"fn <F> (self, folder: F) -> F","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":885},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":158703,"byte_end":158711,"line_start":126,"line_end":126,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::iter::plumbing::Consumer","value":"Consumer<Item>: Send + Sized","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892}],"decl_id":null,"docs":" A consumer is effectively a [generalized \"fold\" operation][fold],\n and in fact each consumer will eventually be converted into a\n [`Folder`]. What makes a consumer special is that, like a\n [`Producer`], it can be **split** into multiple consumers using\n the `split_at` method. When a consumer is split, it produces two\n consumers, as well as a **reducer**. The two consumers can be fed\n items independently, and when they are done the reducer is used to\n combine their two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":887},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":158812,"byte_end":158818,"line_start":128,"line_end":128,"column_start":10,"column_end":16},"name":"Folder","qualname":"::iter::plumbing::Consumer::Folder","value":"type Folder: Folder<Item, Result = Self::Result>;","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" The type of folder that this consumer can be converted into.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":888},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":158939,"byte_end":158946,"line_start":131,"line_end":131,"column_start":10,"column_end":17},"name":"Reducer","qualname":"::iter::plumbing::Consumer::Reducer","value":"type Reducer: Reducer<Self::Result>;","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" The type of reducer that is produced if this consumer is split.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":889},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":159052,"byte_end":159058,"line_start":134,"line_end":134,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Consumer::Result","value":"type Result: Send;","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" The type of result that this consumer will ultimately produce.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":159294,"byte_end":159302,"line_start":140,"line_end":140,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Consumer::split_at","value":"fn (self, index: usize) -> (Self, Self, Self::Reducer)","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" Divide the consumer into two consumers, one processing items\n `0..index` and one processing items from `index..`. Also\n produces a reducer that can be used to reduce the results at\n the end.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":159488,"byte_end":159499,"line_start":144,"line_end":144,"column_start":8,"column_end":19},"name":"into_folder","qualname":"::iter::plumbing::Consumer::into_folder","value":"fn (self) -> Self::Folder","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" Convert the consumer into a folder that can consume items\n sequentially, eventually producing a final result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":159658,"byte_end":159662,"line_start":148,"line_end":148,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Consumer::full","value":"fn (&self) -> bool","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" Hint whether this `Consumer` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":893},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":160025,"byte_end":160031,"line_start":157,"line_end":157,"column_start":11,"column_end":17},"name":"Folder","qualname":"::iter::plumbing::Folder","value":"Folder<Item>: Sized","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":900}],"decl_id":null,"docs":" The `Folder` trait encapsulates [the standard fold\n operation][fold].  It can be fed many items using the `consume`\n method. At the end, once all items have been consumed, it can then\n be converted (using `complete`) into a final value.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":895},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":160131,"byte_end":160137,"line_start":159,"line_end":159,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Folder::Result","value":"type Result;","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" The type of result that will ultimately be produced by the folder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":160206,"byte_end":160213,"line_start":162,"line_end":162,"column_start":8,"column_end":15},"name":"consume","qualname":"::iter::plumbing::Folder::consume","value":"fn (self, item: Item) -> Self","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Consume next item and return new sequential state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":160642,"byte_end":160654,"line_start":172,"line_end":172,"column_start":8,"column_end":20},"name":"consume_iter","qualname":"::iter::plumbing::Folder::consume_iter","value":"fn <I> (mut self, iter: I) -> Self","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Consume items from the iterator until full, and return new sequential state.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":160957,"byte_end":160965,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"complete","qualname":"::iter::plumbing::Folder::complete","value":"fn (self) -> Self::Result","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Finish consuming items, produce final result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":161122,"byte_end":161126,"line_start":189,"line_end":189,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Folder::full","value":"fn (&self) -> bool","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Hint whether this `Folder` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":901},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":161556,"byte_end":161563,"line_start":199,"line_end":199,"column_start":11,"column_end":18},"name":"Reducer","qualname":"::iter::plumbing::Reducer","value":"Reducer<Result>","parent":null,"children":[{"krate":0,"index":903}],"decl_id":null,"docs":" The reducer is the final step of a `Consumer` -- after a consumer\n has been split into two parts, and each of those parts has been\n fully processed, we are left with two results. The reducer is then\n used to combine those two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":161664,"byte_end":161670,"line_start":202,"line_end":202,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::plumbing::Reducer::reduce","value":"fn (self, left: Result, right: Result) -> Result","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":" Reduce two final results into one; this is executed after a\n split.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":904},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":162032,"byte_end":162049,"line_start":210,"line_end":210,"column_start":11,"column_end":28},"name":"UnindexedConsumer","qualname":"::iter::plumbing::UnindexedConsumer","value":"UnindexedConsumer<I>: Consumer<I>","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"decl_id":null,"docs":" A stateless consumer can be freely copied. These consumers can be\n used like regular consumers, but they also support a\n `split_off_left` method that does not take an index to split, but\n simply splits at some arbitrary point (`for_each`, for example,\n produces an unindexed consumer).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":162525,"byte_end":162539,"line_start":218,"line_end":218,"column_start":8,"column_end":22},"name":"split_off_left","qualname":"::iter::plumbing::UnindexedConsumer::split_off_left","value":"fn (&self) -> Self","parent":{"krate":0,"index":904},"children":[],"decl_id":null,"docs":" Splits off a \"left\" consumer and returns it. The `self`\n consumer should then be used to consume the \"right\" portion of\n the data. (The ordering matters for methods like find_first --\n values produced by the returned value are given precedence\n over values produced by `self`.) Once the left and right\n halves have been fully consumed, you should reduce the results\n with the result of `to_reducer`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":162661,"byte_end":162671,"line_start":222,"line_end":222,"column_start":8,"column_end":18},"name":"to_reducer","qualname":"::iter::plumbing::UnindexedConsumer::to_reducer","value":"fn (&self) -> Self::Reducer","parent":{"krate":0,"index":904},"children":[],"decl_id":null,"docs":" Creates a reducer that can be used to combine the results from\n a split consumer.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":908},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":163148,"byte_end":163165,"line_start":233,"line_end":233,"column_start":11,"column_end":28},"name":"UnindexedProducer","qualname":"::iter::plumbing::UnindexedProducer","value":"UnindexedProducer: Send + Sized","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"decl_id":null,"docs":" A variant on `Producer` which does not know its exact length or\n cannot represent it in a `usize`. These producers act like\n ordinary producers except that they cannot be told to split at a\n particular point. Instead, you just ask them to split 'somewhere'.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":909},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":163243,"byte_end":163247,"line_start":235,"line_end":235,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::UnindexedProducer::Item","value":"type Item;","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":" The type of item returned by this producer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":163336,"byte_end":163341,"line_start":238,"line_end":238,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::plumbing::UnindexedProducer::split","value":"fn (self) -> (Self, Option<Self>)","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":" Split midway into a new producer if possible, otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":163524,"byte_end":163533,"line_start":242,"line_end":242,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::UnindexedProducer::fold_with","value":"fn <F> (self, folder: F) -> F","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":919},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":167312,"byte_end":167318,"line_start":346,"line_end":346,"column_start":8,"column_end":14},"name":"bridge","qualname":"::iter::plumbing::bridge","value":"fn <I, C> (par_iter: I, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a parallel iterator to a\n consumer. It will convert the `par_iter` into a producer P and\n then pull items from P and feed them to `consumer`, splitting and\n creating parallel threads as needed.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":932},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":168681,"byte_end":168705,"line_start":386,"line_end":386,"column_start":8,"column_end":32},"name":"bridge_producer_consumer","qualname":"::iter::plumbing::bridge_producer_consumer","value":"fn <P, C> (len: usize, producer: P, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a producer and a\n consumer. You may prefer to call [`bridge`], which wraps this\n function. This function will draw items from `producer` and feed\n them to `consumer`, splitting and creating parallel tasks when\n needed.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":940},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":170271,"byte_end":170287,"line_start":426,"line_end":426,"column_start":8,"column_end":24},"name":"bridge_unindexed","qualname":"::iter::plumbing::bridge_unindexed","value":"fn <P, C> (producer: P, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":" A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4427},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":174079,"byte_end":174083,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Fold","qualname":"::iter::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":4433}],"decl_id":null,"docs":" `Fold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":173977,"byte_end":174050,"line_start":24,"line_end":24,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4439},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":177552,"byte_end":177560,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"FoldWith","qualname":"::iter::fold::FoldWith","value":"FoldWith {  }","parent":null,"children":[{"krate":0,"index":4443},{"krate":0,"index":4444},{"krate":0,"index":4445}],"decl_id":null,"docs":" `FoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":177450,"byte_end":177523,"line_start":158,"line_end":158,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4451},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/skip.rs","byte_start":182510,"byte_end":182514,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Skip","qualname":"::iter::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":4453},{"krate":0,"index":4454}],"decl_id":null,"docs":" `Skip` is an iterator that skips over the first `n` elements.\n This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/skip.rs","byte_start":182401,"byte_end":182474,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/splitter.rs","byte_start":188251,"byte_end":188256,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::splitter::split","value":"fn <D, S> (data: D, splitter: S) -> Split<D, S>","parent":null,"children":[],"decl_id":null,"docs":" The `split` function takes arbitrary data and a closure that knows how to\n split it, and turns this into a `ParallelIterator`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4461},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/splitter.rs","byte_start":188635,"byte_end":188640,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"Split","qualname":"::iter::splitter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4464},{"krate":0,"index":4465}],"decl_id":null,"docs":" `Split` is a parallel iterator using arbitrary data and a splitting function.\n This struct is created by the [`split()`] function.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4470},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/take.rs","byte_start":190489,"byte_end":190493,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::iter::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":4472},{"krate":0,"index":4473}],"decl_id":null,"docs":" `Take` is an iterator that iterates over the first `n` elements.\n This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/take.rs","byte_start":190380,"byte_end":190453,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4480},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":192620,"byte_end":192623,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"Map","qualname":"::iter::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4483},{"krate":0,"index":4484}],"decl_id":null,"docs":" `Map` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":192518,"byte_end":192591,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4489},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":198558,"byte_end":198565,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"MapWith","qualname":"::iter::map_with::MapWith","value":"MapWith {  }","parent":null,"children":[{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495}],"decl_id":null,"docs":" `MapWith` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":198456,"byte_end":198529,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4501},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":206858,"byte_end":206861,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Zip","qualname":"::iter::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":4504},{"krate":0,"index":4505}],"decl_id":null,"docs":" `Zip` is an iterator that zips up `a` and `b` into a single iterator\n of pairs. This struct is created by the [`zip()`] method on\n [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":206749,"byte_end":206822,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4514},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip_eq.rs","byte_start":211075,"byte_end":211080,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::iter::zip_eq::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":4517}],"decl_id":null,"docs":" An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal\n length simultaneously.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip_eq.rs","byte_start":210966,"byte_end":211039,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4526},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":212844,"byte_end":212854,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::iter::interleave::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":4529},{"krate":0,"index":4530}],"decl_id":null,"docs":" `Interleave` is an iterator that interleaves elements of iterators\n `i` and `j` in one continuous iterator. This struct is created by\n the [`interleave()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":212735,"byte_end":212808,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4539},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave_shortest.rs","byte_start":221767,"byte_end":221785,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::iter::interleave_shortest::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":4542}],"decl_id":null,"docs":" `InterleaveShortest` is an iterator that works similarly to\n `Interleave`, but this version stops returning elements once one\n of the iterators run out.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave_shortest.rs","byte_start":221658,"byte_end":221731,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4551},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":223989,"byte_end":224000,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::iter::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":4553},{"krate":0,"index":4554}],"decl_id":null,"docs":" `Intersperse` is an iterator that inserts a particular item between each\n item of the adapted iterator.  This struct is created by the\n [`intersperse()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":223880,"byte_end":223953,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4561},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":233883,"byte_end":233889,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Update","qualname":"::iter::update::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":4564},{"krate":0,"index":4565}],"decl_id":null,"docs":" `Update` is an iterator that mutates the elements of an\n underlying iterator before they are yielded.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":233781,"byte_end":233854,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4583},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/rev.rs","byte_start":242589,"byte_end":242592,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Rev","qualname":"::iter::rev::Rev","value":"Rev {  }","parent":null,"children":[{"krate":0,"index":4585}],"decl_id":null,"docs":" `Rev` is an iterator that produces elements in reverse order. This struct\n is created by the [`rev()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/rev.rs","byte_start":242480,"byte_end":242553,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4592},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":245520,"byte_end":245526,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"MinLen","qualname":"::iter::len::MinLen","value":"MinLen {  }","parent":null,"children":[{"krate":0,"index":4594},{"krate":0,"index":4595}],"decl_id":null,"docs":" `MinLen` is an iterator that imposes a minimum length on iterator splits.\n This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":245411,"byte_end":245484,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4602},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":248698,"byte_end":248704,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"MaxLen","qualname":"::iter::len::MaxLen","value":"MaxLen {  }","parent":null,"children":[{"krate":0,"index":4604},{"krate":0,"index":4605}],"decl_id":null,"docs":" `MaxLen` is an iterator that imposes a maximum length on iterator splits.\n This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":248589,"byte_end":248662,"line_start":137,"line_end":137,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4612},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":255947,"byte_end":255953,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Cloned","qualname":"::iter::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":4614}],"decl_id":null,"docs":" `Cloned` is an iterator that clones the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":255838,"byte_end":255911,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4621},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":260684,"byte_end":260691,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::iter::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4624},{"krate":0,"index":4625}],"decl_id":null,"docs":" `Inspect` is an iterator that calls a function with a reference to each\n element before yielding it.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":260582,"byte_end":260655,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4630},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/while_some.rs","byte_start":266745,"byte_end":266754,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::iter::while_some::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":4632}],"decl_id":null,"docs":" `WhileSome` is an iterator that yields the `Some` elements of an iterator,\n halting as soon as any `None` is produced.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/while_some.rs","byte_start":266636,"byte_end":266709,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":2614},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":279429,"byte_end":279433,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Left","qualname":"::iter::unzip::UnzipOp::Left","value":"type Left: Send;","parent":{"krate":0,"index":2612},"children":[],"decl_id":null,"docs":" The type of item expected by the left consumer.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2615},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":279508,"byte_end":279513,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Right","qualname":"::iter::unzip::UnzipOp::Right","value":"type Right: Send;","parent":{"krate":0,"index":2612},"children":[],"decl_id":null,"docs":" The type of item expected by the right consumer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4639},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":290081,"byte_end":290087,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::iter::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":4641}],"decl_id":null,"docs":" Iterator adaptor for [the `repeat()` function](fn.repeat.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2781},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":290639,"byte_end":290645,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::iter::repeat::repeat","value":"fn <T> (elt: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that endlessly repeats `elt` (by\n cloning it). Note that this iterator has \"infinite\" length, so\n typically you would want to use `zip` or `take` or some other\n means to shorten it, or consider using\n [the `repeatn()` function](fn.repeatn.html) instead.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":291041,"byte_end":291045,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"take","qualname":"<Repeat<T>>::take","value":"fn (self, n: usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Take only `n` repeats of the element, similar to the general\n [`take()`](trait.IndexedParallelIterator.html#method.take).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":291305,"byte_end":291308,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"zip","qualname":"<Repeat<T>>::zip","value":"fn <Z> (self, zip_op: Z) -> Zip<RepeatN<T>, Z::Iter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate tuples repeating the element with items from another\n iterator, similar to the general\n [`zip()`](trait.IndexedParallelIterator.html#method.zip).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4648},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":292463,"byte_end":292470,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::iter::repeat::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":4650},{"krate":0,"index":4651}],"decl_id":null,"docs":" Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":292835,"byte_end":292842,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::iter::repeat::repeatn","value":"fn <T> (elt: T, n: usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces `n` repeats of `elt`\n (by cloning it).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2854},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":295628,"byte_end":295633,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::iter::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces nothing.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2856},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":295773,"byte_end":295778,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"Empty","qualname":"::iter::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2858}],"decl_id":null,"docs":" Iterator adaptor for [the `empty()` function](fn.empty.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2896},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/once.rs","byte_start":297922,"byte_end":297926,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"once","qualname":"::iter::once::once","value":"fn <T> (item: T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces an element exactly once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4658},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/once.rs","byte_start":298084,"byte_end":298088,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Once","qualname":"::iter::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4660}],"decl_id":null,"docs":" Iterator adaptor for [the `once()` function](fn.once.html).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":27578,"byte_end":27598,"line_start":168,"line_end":168,"column_start":11,"column_end":31},"name":"IntoParallelIterator","qualname":"::iter::IntoParallelIterator","value":"IntoParallelIterator","parent":null,"children":[{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917}],"decl_id":null,"docs":" `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":27667,"byte_end":27671,"line_start":170,"line_end":170,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":2914},"children":[],"decl_id":null,"docs":" The parallel iterator type that will be created.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":27786,"byte_end":27790,"line_start":173,"line_end":173,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":2914},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":28441,"byte_end":28454,"line_start":197,"line_end":197,"column_start":8,"column_end":21},"name":"into_par_iter","qualname":"::iter::IntoParallelIterator::into_par_iter","value":"fn (self) -> Self::Iter","parent":{"krate":0,"index":2914},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2918},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":29043,"byte_end":29066,"line_start":213,"line_end":213,"column_start":11,"column_end":34},"name":"IntoParallelRefIterator","qualname":"::iter::IntoParallelRefIterator","value":"IntoParallelRefIterator<'data>","parent":null,"children":[{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922}],"decl_id":null,"docs":" `IntoParallelRefIterator` implements the conversion to a\n [`ParallelIterator`], providing shared references to the data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2920},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":29150,"byte_end":29154,"line_start":215,"line_end":215,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" The type of the parallel iterator that will be returned.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2921},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":29330,"byte_end":29334,"line_start":219,"line_end":219,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This will typically be an `&'data T` reference type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":29824,"byte_end":29832,"line_start":236,"line_end":236,"column_start":8,"column_end":16},"name":"par_iter","qualname":"::iter::IntoParallelRefIterator::par_iter","value":"fn (&'data self) -> Self::Iter","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2929},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":30752,"byte_end":30778,"line_start":264,"line_end":264,"column_start":11,"column_end":37},"name":"IntoParallelRefMutIterator","qualname":"::iter::IntoParallelRefMutIterator","value":"IntoParallelRefMutIterator<'data>","parent":null,"children":[{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933}],"decl_id":null,"docs":" `IntoParallelRefMutIterator` implements the conversion to a\n [`ParallelIterator`], providing mutable references to the data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2931},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":30848,"byte_end":30852,"line_start":266,"line_end":266,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefMutIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":2929},"children":[],"decl_id":null,"docs":" The type of iterator that will be created.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2932},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":31004,"byte_end":31008,"line_start":270,"line_end":270,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefMutIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":2929},"children":[],"decl_id":null,"docs":" The type of item that will be produced; this is typically an\n `&'data mut T` reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":31322,"byte_end":31334,"line_start":283,"line_end":283,"column_start":8,"column_end":20},"name":"par_iter_mut","qualname":"::iter::IntoParallelRefMutIterator::par_iter_mut","value":"fn (&'data mut self) -> Self::Iter","parent":{"krate":0,"index":2929},"children":[],"decl_id":null,"docs":" Creates the parallel iterator from `self`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2940},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":32310,"byte_end":32326,"line_start":311,"line_end":311,"column_start":11,"column_end":27},"name":"ParallelIterator","qualname":"::iter::ParallelIterator","value":"ParallelIterator: Sized + Send","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2944},{"krate":0,"index":2948},{"krate":0,"index":2950},{"krate":0,"index":2953},{"krate":0,"index":2957},{"krate":0,"index":2960},{"krate":0,"index":2962},{"krate":0,"index":2964},{"krate":0,"index":2966},{"krate":0,"index":2969},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2976},{"krate":0,"index":2982},{"krate":0,"index":2986},{"krate":0,"index":2989},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2997},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3013},{"krate":0,"index":3015},{"krate":0,"index":3017},{"krate":0,"index":3019},{"krate":0,"index":3021},{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3031},{"krate":0,"index":3033},{"krate":0,"index":3038},{"krate":0,"index":3042},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3051}],"decl_id":null,"docs":" Parallel version of the standard iterator trait.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2941},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":32592,"byte_end":32596,"line_start":317,"line_end":317,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" The type of item that this parallel iterator produces.\n For example, if you use the [`for_each`] method, this is the type of\n item that your closure will be invoked with.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":32852,"byte_end":32860,"line_start":328,"line_end":328,"column_start":8,"column_end":16},"name":"for_each","qualname":"::iter::ParallelIterator::for_each","value":"fn <OP> (self, op: OP) -> ()","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Executes `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":33690,"byte_end":33703,"line_start":357,"line_end":357,"column_start":8,"column_end":21},"name":"for_each_with","qualname":"::iter::ParallelIterator::for_each_with","value":"fn <OP, T> (self, init: T, op: OP) -> ()","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Executes `OP` on the given `init` value with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":34144,"byte_end":34149,"line_start":375,"line_end":375,"column_start":8,"column_end":13},"name":"count","qualname":"::iter::ParallelIterator::count","value":"fn (self) -> usize","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Counts the number of items in this parallel iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":34600,"byte_end":34603,"line_start":393,"line_end":393,"column_start":8,"column_end":11},"name":"map","qualname":"::iter::ParallelIterator::map","value":"fn <F, R> (self, map_op: F) -> Map<Self, F>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator, producing a new\n iterator with the results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":35947,"byte_end":35955,"line_start":429,"line_end":429,"column_start":8,"column_end":16},"name":"map_with","qualname":"::iter::ParallelIterator::map_with","value":"fn <F, T, R> (self, init: T, map_op: F) -> MapWith<Self, T, F>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Applies `map_op` to the given `init` value with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":36758,"byte_end":36764,"line_start":455,"line_end":455,"column_start":8,"column_end":14},"name":"cloned","qualname":"::iter::ParallelIterator::cloned","value":"fn <'a, T> (self) -> Cloned<Self>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Creates an iterator which clones all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":37960,"byte_end":37967,"line_start":491,"line_end":491,"column_start":8,"column_end":15},"name":"inspect","qualname":"::iter::ParallelIterator::inspect","value":"fn <OP> (self, inspect_op: OP) -> Inspect<Self, OP>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Applies `inspect_op` to a reference to each item of this iterator,\n producing a new iterator passing through the original items.  This is\n often useful for debugging to see what's happening in iterator stages.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2962},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":38471,"byte_end":38477,"line_start":510,"line_end":510,"column_start":8,"column_end":14},"name":"update","qualname":"::iter::ParallelIterator::update","value":"fn <F> (self, update_op: F) -> Update<Self, F>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Mutates each item of this iterator before yielding it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":39067,"byte_end":39073,"line_start":530,"line_end":530,"column_start":8,"column_end":14},"name":"filter","qualname":"::iter::ParallelIterator::filter","value":"fn <P> (self, filter_op: P) -> Filter<Self, P>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator, producing a new\n iterator with only the items that gave `true` results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":39862,"byte_end":39872,"line_start":554,"line_end":554,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::iter::ParallelIterator::filter_map","value":"fn <P, R> (self, filter_op: P) -> FilterMap<Self, P>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator to get an `Option`,\n producing a new iterator with only the items from `Some` results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":40558,"byte_end":40566,"line_start":577,"line_end":577,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::iter::ParallelIterator::flat_map","value":"fn <F, PI> (self, map_op: F) -> FlatMap<Self, F>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested iterators,\n producing a new iterator that flattens these back into one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":41102,"byte_end":41109,"line_start":596,"line_end":596,"column_start":8,"column_end":15},"name":"flatten","qualname":"::iter::ParallelIterator::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" An adaptor that flattens iterable `Item`s into one large iterator","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":42789,"byte_end":42795,"line_start":632,"line_end":632,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::ParallelIterator::reduce","value":"fn <OP, ID> (self, identity: ID, op: OP) -> Self::Item","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n The argument `identity` should be a closure that can produce\n \"identity\" value which may be inserted into the sequence as\n needed to create opportunities for parallel execution. So, for\n example, if you are doing a summation, then `identity()` ought\n to produce something that represents the zero for your type\n (but consider just calling `sum()` in that case).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":44137,"byte_end":44148,"line_start":665,"line_end":665,"column_start":8,"column_end":19},"name":"reduce_with","qualname":"::iter::ParallelIterator::reduce_with","value":"fn <OP> (self, op: OP) -> Option<Self::Item>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n If the iterator is empty, `None` is returned; otherwise,\n `Some` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":50231,"byte_end":50235,"line_start":812,"line_end":812,"column_start":8,"column_end":12},"name":"fold","qualname":"::iter::ParallelIterator::fold","value":"fn <T, ID, F> (self, identity: ID, fold_op: F) -> Fold<Self, ID, F>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Parallel fold is similar to sequential fold except that the\n sequence of items may be subdivided before it is\n folded. Consider a list of numbers like `22 3 77 89 46`. If\n you used sequential fold to add them (`fold(0, |a,b| a+b)`,\n you would wind up first adding 0 + 22, then 22 + 3, then 25 +\n 77, and so forth. The **parallel fold** works similarly except\n that it first breaks up your list into sublists, and hence\n instead of yielding up a single sum at the end, it yields up\n multiple sums. The number of results is nondeterministic, as\n is the point where the breaks occur.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":51168,"byte_end":51177,"line_start":839,"line_end":839,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::ParallelIterator::fold_with","value":"fn <F, T> (self, init: T, fold_op: F) -> FoldWith<Self, T, F>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Applies `fold_op` to the given `init` value with each item of this\n iterator, finally producing the value for further use.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2989},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":52165,"byte_end":52168,"line_start":870,"line_end":870,"column_start":8,"column_end":11},"name":"sum","qualname":"::iter::ParallelIterator::sum","value":"fn <S> (self) -> S","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Sums up the items in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2991},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":53162,"byte_end":53169,"line_start":902,"line_end":902,"column_start":8,"column_end":15},"name":"product","qualname":"::iter::ParallelIterator::product","value":"fn <P> (self) -> P","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Multiplies all the items in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":54007,"byte_end":54010,"line_start":931,"line_end":931,"column_start":8,"column_end":11},"name":"min","qualname":"::iter::ParallelIterator::min","value":"fn (self) -> Option<Self::Item>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(min)`\n is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2994},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":54744,"byte_end":54750,"line_start":954,"line_end":954,"column_start":8,"column_end":14},"name":"min_by","qualname":"::iter::ParallelIterator::min_by","value":"fn <F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":55643,"byte_end":55653,"line_start":980,"line_end":980,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::iter::ParallelIterator::min_by_key","value":"fn <K, F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Computes the item that yields the minimum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":56616,"byte_end":56619,"line_start":1012,"line_end":1012,"column_start":8,"column_end":11},"name":"max","qualname":"::iter::ParallelIterator::max","value":"fn (self) -> Option<Self::Item>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(max)`\n is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":57367,"byte_end":57373,"line_start":1035,"line_end":1035,"column_start":8,"column_end":14},"name":"max_by","qualname":"::iter::ParallelIterator::max_by","value":"fn <F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":58267,"byte_end":58277,"line_start":1061,"line_end":1061,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::iter::ParallelIterator::max_by_key","value":"fn <K, F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Computes the item that yields the maximum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":58938,"byte_end":58943,"line_start":1086,"line_end":1086,"column_start":8,"column_end":13},"name":"chain","qualname":"::iter::ParallelIterator::chain","value":"fn <C> (self, chain: C) -> Chain<Self, C::Iter>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Takes two iterators and creates a new iterator over both.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":60032,"byte_end":60040,"line_start":1115,"line_end":1115,"column_start":8,"column_end":16},"name":"find_any","qualname":"::iter::ParallelIterator::find_any","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate and returns it. This operation\n is similar to [`find` on sequential iterators][find] but\n the item returned may not be the **first** one in the parallel\n sequence which matches, since we search the entire sequence in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":61074,"byte_end":61084,"line_start":1144,"line_end":1144,"column_start":8,"column_end":18},"name":"find_first","qualname":"::iter::ParallelIterator::find_first","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":62092,"byte_end":62101,"line_start":1172,"line_end":1172,"column_start":8,"column_end":17},"name":"find_last","qualname":"::iter::ParallelIterator::find_last","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":62417,"byte_end":62421,"line_start":1181,"line_end":1181,"column_start":8,"column_end":12},"name":"find","qualname":"::iter::ParallelIterator::find","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n                 \"parallel `find` does not search in order -- use `find_any`, \\\\\n    `find_first`, or `find_last`\")","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":62290,"byte_end":62409,"line_start":1179,"line_end":1180,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":63121,"byte_end":63124,"line_start":1204,"line_end":1204,"column_start":8,"column_end":11},"name":"any","qualname":"::iter::ParallelIterator::any","value":"fn <P> (self, predicate: P) -> bool","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and if so returns true.  Once\n a match is found, we'll attempt to stop process the rest\n of the items.  Proving that there's no match, returning false,\n does require visiting every item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":63742,"byte_end":63745,"line_start":1225,"line_end":1225,"column_start":8,"column_end":11},"name":"all","qualname":"::iter::ParallelIterator::all","value":"fn <P> (self, predicate: P) -> bool","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Tests that every item in the parallel iterator matches the given\n predicate, and if so returns true.  If a counter-example is found,\n we'll attempt to stop processing more items, then return false.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":64637,"byte_end":64647,"line_start":1253,"line_end":1253,"column_start":8,"column_end":18},"name":"while_some","qualname":"::iter::ParallelIterator::while_some","value":"fn <T> (self) -> WhileSome<Self>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Creates an iterator over the `Some` items of this iterator, halting\n as soon as any `None` is found.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3031},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":65482,"byte_end":65489,"line_start":1279,"line_end":1279,"column_start":8,"column_end":15},"name":"collect","qualname":"::iter::ParallelIterator::collect","value":"fn <C> (self) -> C","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Create a fresh collection containing all the element produced\n by this parallel iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":66320,"byte_end":66325,"line_start":1305,"line_end":1305,"column_start":8,"column_end":13},"name":"unzip","qualname":"::iter::ParallelIterator::unzip","value":"fn <A, B, FromA, FromB> (self) -> (FromA, FromB)","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Unzips the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":67450,"byte_end":67459,"line_start":1334,"line_end":1334,"column_start":8,"column_end":17},"name":"partition","qualname":"::iter::ParallelIterator::partition","value":"fn <A, B, P> (self, predicate: P) -> (A, B)","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Partitions the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.  Items for which the `predicate` returns\n true go into the first container, and the rest go into the second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":68746,"byte_end":68759,"line_start":1364,"line_end":1364,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::iter::ParallelIterator::partition_map","value":"fn <A, B, P, L, R> (self, predicate: P) -> (A, B)","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Partitions and maps the items of a parallel iterator into a pair of\n arbitrary `ParallelExtend` containers.  `Either::Left` items go into\n the first container, and `Either::Right` items go into the second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":69411,"byte_end":69422,"line_start":1386,"line_end":1386,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::iter::ParallelIterator::intersperse","value":"fn (self, element: Self::Item) -> Intersperse<Self>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Intersperses clones of an element between items of this iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":70079,"byte_end":70094,"line_start":1404,"line_end":1404,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"::iter::ParallelIterator::drive_unindexed","value":"fn <C> (self, consumer: C) -> C::Result","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":70970,"byte_end":70977,"line_start":1421,"line_end":1421,"column_start":8,"column_end":15},"name":"opt_len","qualname":"::iter::ParallelIterator::opt_len","value":"fn (&self) -> Option<usize>","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":71404,"byte_end":71427,"line_start":1440,"line_end":1440,"column_start":11,"column_end":34},"name":"IndexedParallelIterator","qualname":"::iter::IndexedParallelIterator","value":"IndexedParallelIterator: ParallelIterator","parent":null,"children":[{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3062},{"krate":0,"index":3064},{"krate":0,"index":3066},{"krate":0,"index":3068},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3075},{"krate":0,"index":3079},{"krate":0,"index":3082},{"krate":0,"index":3084},{"krate":0,"index":3086},{"krate":0,"index":3088},{"krate":0,"index":3090},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3099},{"krate":0,"index":3103},{"krate":0,"index":3107},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3115}],"decl_id":null,"docs":" An iterator that supports \"random access\" to its data, meaning\n that you can split it at arbitrary indices and draw data from\n those points.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3058},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":72036,"byte_end":72052,"line_start":1459,"line_end":1459,"column_start":8,"column_end":24},"name":"collect_into_vec","qualname":"::iter::IndexedParallelIterator::collect_into_vec","value":"fn (self, target: &mut Vec<Self::Item>) -> ()","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Collects the results of the iterator into the specified\n vector. The vector is always truncated before execution\n begins. If possible, reusing the vector across calls can lead\n to better performance since it reuses the same backing buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":72862,"byte_end":72877,"line_start":1484,"line_end":1484,"column_start":8,"column_end":23},"name":"unzip_into_vecs","qualname":"::iter::IndexedParallelIterator::unzip_into_vecs","value":"fn <A, B> (self, left: &mut Vec<A>, right: &mut Vec<B>) -> ()","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Unzips the results of the iterator into the specified\n vectors. The vectors are always truncated before execution\n begins. If possible, reusing the vectors across calls can lead\n to better performance since they reuse the same backing buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":73695,"byte_end":73698,"line_start":1510,"line_end":1510,"column_start":8,"column_end":11},"name":"zip","qualname":"::iter::IndexedParallelIterator::zip","value":"fn <Z> (self, zip_op: Z) -> Zip<Self, Z::Iter>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Iterate over tuples `(A, B)`, where the items `A` are from\n this iterator and `B` are from the iterator given as argument.\n Like the `zip` method on ordinary iterators, if the two\n iterators are of unequal length, you only get the items they\n have in common.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":74473,"byte_end":74479,"line_start":1536,"line_end":1536,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::iter::IndexedParallelIterator::zip_eq","value":"fn <Z> (self, zip_op: Z) -> ZipEq<Self, Z::Iter>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" The same as `Zip`, but requires that both iterators have the same length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":75327,"byte_end":75337,"line_start":1559,"line_end":1559,"column_start":8,"column_end":18},"name":"interleave","qualname":"::iter::IndexedParallelIterator::interleave","value":"fn <I> (self, other: I) -> Interleave<Self, I::Iter>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator. Alternately yields elements from this iterator and\n the given iterator, until both are exhausted. If one iterator\n is exhausted before the other, the last elements are provided\n from the other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":75955,"byte_end":75974,"line_start":1577,"line_end":1577,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::iter::IndexedParallelIterator::interleave_shortest","value":"fn <I> (self, other: I) -> InterleaveShortest<Self, I::Iter>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator, until one is exhausted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":77156,"byte_end":77162,"line_start":1604,"line_end":1604,"column_start":8,"column_end":14},"name":"chunks","qualname":"::iter::IndexedParallelIterator::chunks","value":"fn (self, chunk_size: usize) -> Chunks<Self>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Split an iterator up into fixed-size chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":77774,"byte_end":77777,"line_start":1623,"line_end":1623,"column_start":8,"column_end":11},"name":"cmp","qualname":"::iter::IndexedParallelIterator::cmp","value":"fn <I> (self, other: I) -> Ordering","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":78826,"byte_end":78837,"line_start":1652,"line_end":1652,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::iter::IndexedParallelIterator::partial_cmp","value":"fn <I> (self, other: I) -> Option<Ordering>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":79407,"byte_end":79409,"line_start":1667,"line_end":1667,"column_start":8,"column_end":10},"name":"eq","qualname":"::iter::IndexedParallelIterator::eq","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are equal to those of another\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":79810,"byte_end":79812,"line_start":1678,"line_end":1678,"column_start":8,"column_end":10},"name":"ne","qualname":"::iter::IndexedParallelIterator::ne","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are unequal to those of another\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":80136,"byte_end":80138,"line_start":1688,"line_end":1688,"column_start":8,"column_end":10},"name":"lt","qualname":"::iter::IndexedParallelIterator::lt","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically less than those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":80484,"byte_end":80486,"line_start":1698,"line_end":1698,"column_start":8,"column_end":10},"name":"le","qualname":"::iter::IndexedParallelIterator::le","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":80901,"byte_end":80903,"line_start":1709,"line_end":1709,"column_start":8,"column_end":10},"name":"gt","qualname":"::iter::IndexedParallelIterator::gt","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically greater than those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3090},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":81252,"byte_end":81254,"line_start":1719,"line_end":1719,"column_start":8,"column_end":10},"name":"ge","qualname":"::iter::IndexedParallelIterator::ge","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":81915,"byte_end":81924,"line_start":1743,"line_end":1743,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::iter::IndexedParallelIterator::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Yields an index along with each item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":82327,"byte_end":82331,"line_start":1761,"line_end":1761,"column_start":8,"column_end":12},"name":"skip","qualname":"::iter::IndexedParallelIterator::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Creates an iterator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":82732,"byte_end":82736,"line_start":1779,"line_end":1779,"column_start":8,"column_end":12},"name":"take","qualname":"::iter::IndexedParallelIterator::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Creates an iterator that yields the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3095},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":83450,"byte_end":83462,"line_start":1801,"line_end":1801,"column_start":8,"column_end":20},"name":"position_any","qualname":"::iter::IndexedParallelIterator::position_any","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and returns its index.  Like\n `ParallelIterator::find_any`, the parallel search will not\n necessarily find the **first** match, and once a match is\n found we'll attempt to stop processing any more.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":84633,"byte_end":84647,"line_start":1834,"line_end":1834,"column_start":8,"column_end":22},"name":"position_first","qualname":"::iter::IndexedParallelIterator::position_first","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":85784,"byte_end":85797,"line_start":1867,"line_end":1867,"column_start":8,"column_end":21},"name":"position_last","qualname":"::iter::IndexedParallelIterator::position_last","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":86189,"byte_end":86197,"line_start":1879,"line_end":1879,"column_start":8,"column_end":16},"name":"position","qualname":"::iter::IndexedParallelIterator::position","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n                 \"parallel `position` does not search in order -- use `position_any`, \\\\\n    `position_first`, or `position_last`\")","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":86046,"byte_end":86181,"line_start":1877,"line_end":1878,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":86701,"byte_end":86704,"line_start":1900,"line_end":1900,"column_start":8,"column_end":11},"name":"rev","qualname":"::iter::IndexedParallelIterator::rev","value":"fn (self) -> Rev<Self>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Produces a new iterator with the elements of this iterator in\n reverse order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":87521,"byte_end":87533,"line_start":1926,"line_end":1926,"column_start":8,"column_end":20},"name":"with_min_len","qualname":"::iter::IndexedParallelIterator::with_min_len","value":"fn (self, min: usize) -> MinLen<Self>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Sets the minimum length of iterators desired to process in each\n thread.  Rayon will not split any smaller than this length, but\n of course an iterator could already be smaller to begin with.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":88477,"byte_end":88489,"line_start":1954,"line_end":1954,"column_start":8,"column_end":20},"name":"with_max_len","qualname":"::iter::IndexedParallelIterator::with_max_len","value":"fn (self, max: usize) -> MaxLen<Self>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Sets the maximum length of iterators desired to process in each\n thread.  Rayon will try to split at least below this length,\n unless that would put it below the length from `with_min_len()`.\n For example, given min=10 and max=15, a length of 16 will not be\n split any further.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":88982,"byte_end":88985,"line_start":1972,"line_end":1972,"column_start":8,"column_end":11},"name":"len","qualname":"::iter::IndexedParallelIterator::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Produces an exact count of how many items this iterator will\n produce, presuming no panic occurs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3113},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":89685,"byte_end":89690,"line_start":1988,"line_end":1988,"column_start":8,"column_end":13},"name":"drive","qualname":"::iter::IndexedParallelIterator::drive","value":"fn <C> (self, consumer: C) -> C::Result","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":90466,"byte_end":90479,"line_start":2005,"line_end":2005,"column_start":8,"column_end":21},"name":"with_producer","qualname":"::iter::IndexedParallelIterator::with_producer","value":"fn <CB> (self, callback: CB) -> CB::Output","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":91629,"byte_end":91649,"line_start":2044,"line_end":2044,"column_start":11,"column_end":31},"name":"FromParallelIterator","qualname":"::iter::FromParallelIterator","value":"FromParallelIterator<T>","parent":null,"children":[{"krate":0,"index":3119}],"decl_id":null,"docs":" `FromParallelIterator` implements the creation of a collection\n from a [`ParallelIterator`]. By implementing\n `FromParallelIterator` for a given type, you define how it will be\n created from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":92626,"byte_end":92639,"line_start":2062,"line_end":2062,"column_start":8,"column_end":21},"name":"from_par_iter","qualname":"::iter::FromParallelIterator::from_par_iter","value":"fn <I> (par_iter: I) -> Self","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":" Creates an instance of the collection from the parallel iterator `par_iter`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":93526,"byte_end":93540,"line_start":2096,"line_end":2096,"column_start":11,"column_end":25},"name":"ParallelExtend","qualname":"::iter::ParallelExtend","value":"ParallelExtend<T>","parent":null,"children":[{"krate":0,"index":3123}],"decl_id":null,"docs":" `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":93967,"byte_end":93977,"line_start":2112,"line_end":2112,"column_start":8,"column_end":18},"name":"par_extend","qualname":"::iter::ParallelExtend::par_extend","value":"fn <I> (&mut self, par_iter: I) -> ()","parent":{"krate":0,"index":3121},"children":[],"decl_id":null,"docs":" Extends an instance of the collection with the elements drawn\n from the parallel iterator `par_iter`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","parent":null,"children":[{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":4667},{"krate":0,"index":4673},{"krate":0,"index":4670},{"krate":0,"index":3132},{"krate":0,"index":3137},{"krate":0,"index":3143},{"krate":0,"index":4676},{"krate":0,"index":4680},{"krate":0,"index":3150},{"krate":0,"index":3154},{"krate":0,"index":4692},{"krate":0,"index":4684},{"krate":0,"index":4699},{"krate":0,"index":4703},{"krate":0,"index":3160},{"krate":0,"index":4715},{"krate":0,"index":4707},{"krate":0,"index":3166},{"krate":0,"index":3169},{"krate":0,"index":3175}],"decl_id":null,"docs":" Parallel iterator types for [options][std::option]","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4667},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":299727,"byte_end":299735,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::option::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4669}],"decl_id":null,"docs":" A parallel iterator over the value in [`Some`] variant of an [`Option`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4676},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":301362,"byte_end":301366,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4679}],"decl_id":null,"docs":" A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4699},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":302363,"byte_end":302370,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4702}],"decl_id":null,"docs":" A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3182},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/prelude.rs","parent":null,"children":[{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192}],"decl_id":null,"docs":" The rayon prelude imports the various `ParallelIterator` traits.\n The intention is that one can include `use rayon::prelude::*` and\n have easy access to the various traits and methods you will need.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3193},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/range.rs","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":4722},{"krate":0,"index":4728},{"krate":0,"index":4725},{"krate":0,"index":3197},{"krate":0,"index":3202},{"krate":0,"index":3205},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":4731},{"krate":0,"index":4736},{"krate":0,"index":4742},{"krate":0,"index":4747},{"krate":0,"index":4752},{"krate":0,"index":4758},{"krate":0,"index":4763},{"krate":0,"index":4768},{"krate":0,"index":4774},{"krate":0,"index":4779},{"krate":0,"index":4784},{"krate":0,"index":4790},{"krate":0,"index":4795},{"krate":0,"index":4800},{"krate":0,"index":4806},{"krate":0,"index":4811},{"krate":0,"index":4816},{"krate":0,"index":4822},{"krate":0,"index":4827},{"krate":0,"index":4832},{"krate":0,"index":4838},{"krate":0,"index":4843},{"krate":0,"index":4848},{"krate":0,"index":4854},{"krate":0,"index":4859},{"krate":0,"index":4861},{"krate":0,"index":4865},{"krate":0,"index":4870},{"krate":0,"index":4872},{"krate":0,"index":4876}],"decl_id":null,"docs":" Parallel iterator types for [ranges][std::range],\n the type for values created by `a..b` expressions","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4722},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/range.rs","byte_start":305966,"byte_end":305970,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4724}],"decl_id":null,"docs":" Parallel iterator over a range, implemented for all integer types.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3212},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/result.rs","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":4881},{"krate":0,"index":4887},{"krate":0,"index":4884},{"krate":0,"index":3217},{"krate":0,"index":4897},{"krate":0,"index":4890},{"krate":0,"index":4903},{"krate":0,"index":4907},{"krate":0,"index":3223},{"krate":0,"index":3227},{"krate":0,"index":4919},{"krate":0,"index":4911},{"krate":0,"index":4926},{"krate":0,"index":4930},{"krate":0,"index":3234},{"krate":0,"index":4942},{"krate":0,"index":4934},{"krate":0,"index":3241}],"decl_id":null,"docs":" Parallel iterator types for [results][std::result]","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4881},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/result.rs","byte_start":310745,"byte_end":310753,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::result::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4883}],"decl_id":null,"docs":" Parallel iterator over a result\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4903},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/result.rs","byte_start":311174,"byte_end":311178,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4906}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a result\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4926},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/result.rs","byte_start":311763,"byte_end":311770,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4929}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a result\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","parent":null,"children":[{"krate":0,"index":3250},{"krate":0,"index":3332},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3432},{"krate":0,"index":3435},{"krate":0,"index":3459},{"krate":0,"index":3462},{"krate":0,"index":3468},{"krate":0,"index":3474},{"krate":0,"index":3480},{"krate":0,"index":4969},{"krate":0,"index":4973},{"krate":0,"index":3486},{"krate":0,"index":3490},{"krate":0,"index":3497},{"krate":0,"index":3505},{"krate":0,"index":3509},{"krate":0,"index":4977},{"krate":0,"index":4982},{"krate":0,"index":3516},{"krate":0,"index":3520},{"krate":0,"index":3527},{"krate":0,"index":3535},{"krate":0,"index":3540},{"krate":0,"index":4986},{"krate":0,"index":4991},{"krate":0,"index":3547},{"krate":0,"index":3551},{"krate":0,"index":3558},{"krate":0,"index":3566},{"krate":0,"index":3571},{"krate":0,"index":4995},{"krate":0,"index":4999},{"krate":0,"index":3578},{"krate":0,"index":3585},{"krate":0,"index":3593},{"krate":0,"index":3597},{"krate":0,"index":5003},{"krate":0,"index":5008},{"krate":0,"index":3604},{"krate":0,"index":3611},{"krate":0,"index":3619},{"krate":0,"index":3624},{"krate":0,"index":3631},{"krate":0,"index":3637},{"krate":0,"index":3642},{"krate":0,"index":3647},{"krate":0,"index":3654},{"krate":0,"index":3665},{"krate":0,"index":3671},{"krate":0,"index":3676},{"krate":0,"index":3683}],"decl_id":null,"docs":" Parallel iterator types for [slices][std::slice]","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3425},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":314177,"byte_end":314190,"line_start":25,"line_end":25,"column_start":11,"column_end":24},"name":"ParallelSlice","qualname":"::slice::ParallelSlice","value":"ParallelSlice<T: Sync>","parent":null,"children":[{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3431}],"decl_id":null,"docs":" Parallel extensions for slices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":314309,"byte_end":314326,"line_start":28,"line_end":28,"column_start":8,"column_end":25},"name":"as_parallel_slice","qualname":"::slice::ParallelSlice::as_parallel_slice","value":"fn (&self) -> &[T]","parent":{"krate":0,"index":3425},"children":[],"decl_id":null,"docs":" Returns a plain slice, which is used to implement the rest of the\n parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":314759,"byte_end":314768,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"par_split","qualname":"::slice::ParallelSlice::par_split","value":"fn <P> (&self, separator: P) -> Split<T, P>","parent":{"krate":0,"index":3425},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over subslices separated by elements that\n match the separator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":315297,"byte_end":315308,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"par_windows","qualname":"::slice::ParallelSlice::par_windows","value":"fn (&self, window_size: usize) -> Windows<T>","parent":{"krate":0,"index":3425},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over all contiguous windows of\n length `size`. The windows overlap.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":315820,"byte_end":315830,"line_start":79,"line_end":79,"column_start":8,"column_end":18},"name":"par_chunks","qualname":"::slice::ParallelSlice::par_chunks","value":"fn (&self, chunk_size: usize) -> Chunks<T>","parent":{"krate":0,"index":3425},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3435},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":316228,"byte_end":316244,"line_start":97,"line_end":97,"column_start":11,"column_end":27},"name":"ParallelSliceMut","qualname":"::slice::ParallelSliceMut","value":"ParallelSliceMut<T: Send>","parent":null,"children":[{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3443},{"krate":0,"index":3446},{"krate":0,"index":3450},{"krate":0,"index":3452},{"krate":0,"index":3455}],"decl_id":null,"docs":" Parallel extensions for mutable slices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":316371,"byte_end":316392,"line_start":100,"line_end":100,"column_start":8,"column_end":29},"name":"as_parallel_slice_mut","qualname":"::slice::ParallelSliceMut::as_parallel_slice_mut","value":"fn (&mut self) -> &mut [T]","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Returns a plain mutable slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":316841,"byte_end":316854,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"par_split_mut","qualname":"::slice::ParallelSliceMut::par_split_mut","value":"fn <P> (&mut self, separator: P) -> SplitMut<T, P>","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over mutable subslices separated by\n elements that match the separator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":317472,"byte_end":317486,"line_start":135,"line_end":135,"column_start":8,"column_end":22},"name":"par_chunks_mut","qualname":"::slice::ParallelSliceMut::par_chunks_mut","value":"fn (&mut self, chunk_size: usize) -> ChunksMut<T>","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":319183,"byte_end":319191,"line_start":176,"line_end":176,"column_start":8,"column_end":16},"name":"par_sort","qualname":"::slice::ParallelSliceMut::par_sort","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":320926,"byte_end":320937,"line_start":219,"line_end":219,"column_start":8,"column_end":19},"name":"par_sort_by","qualname":"::slice::ParallelSliceMut::par_sort_by","value":"fn <F> (&mut self, compare: F) -> ()","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":322649,"byte_end":322664,"line_start":259,"line_end":259,"column_start":8,"column_end":23},"name":"par_sort_by_key","qualname":"::slice::ParallelSliceMut::par_sort_by_key","value":"fn <B, F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":324109,"byte_end":324126,"line_start":298,"line_end":298,"column_start":8,"column_end":25},"name":"par_sort_unstable","qualname":"::slice::ParallelSliceMut::par_sort_unstable","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel, but may not preserve the order of equal elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3452},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":325686,"byte_end":325706,"line_start":340,"line_end":340,"column_start":8,"column_end":28},"name":"par_sort_unstable_by","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by","value":"fn <F> (&mut self, compare: F) -> ()","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function, but may not preserve the order of\n equal elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":327226,"byte_end":327250,"line_start":379,"line_end":379,"column_start":8,"column_end":32},"name":"par_sort_unstable_by_key","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by_key","value":"fn <B, F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function, but may not preserve the order\n of equal elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4969},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":328502,"byte_end":328506,"line_start":435,"line_end":435,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4972}],"decl_id":null,"docs":" Parallel iterator over immutable items in a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4977},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":330023,"byte_end":330029,"line_start":498,"line_end":498,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":4980},{"krate":0,"index":4981}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4986},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":331966,"byte_end":331973,"line_start":574,"line_end":574,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":4989},{"krate":0,"index":4990}],"decl_id":null,"docs":" Parallel iterator over immutable overlapping windows of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4995},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":334022,"byte_end":334029,"line_start":652,"line_end":652,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4998}],"decl_id":null,"docs":" Parallel iterator over mutable items in a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5003},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":335476,"byte_end":335485,"line_start":709,"line_end":709,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":5006},{"krate":0,"index":5007}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3631},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":337328,"byte_end":337333,"line_start":778,"line_end":778,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":3635},{"krate":0,"index":3636}],"decl_id":null,"docs":" Parallel iterator over slices separated by a predicate\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3665},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":339200,"byte_end":339208,"line_start":850,"line_end":850,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":3669},{"krate":0,"index":3670}],"decl_id":null,"docs":" Parallel iterator over mutable slices separated by a predicate\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3694},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","parent":null,"children":[{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697},{"krate":0,"index":3698},{"krate":0,"index":3699},{"krate":0,"index":3702},{"krate":0,"index":3711},{"krate":0,"index":3713},{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3730},{"krate":0,"index":5015},{"krate":0,"index":5021},{"krate":0,"index":5018},{"krate":0,"index":3738},{"krate":0,"index":3741},{"krate":0,"index":3746},{"krate":0,"index":5024},{"krate":0,"index":5033},{"krate":0,"index":5029},{"krate":0,"index":3752},{"krate":0,"index":3756},{"krate":0,"index":3762},{"krate":0,"index":5037},{"krate":0,"index":5046},{"krate":0,"index":5042},{"krate":0,"index":3772},{"krate":0,"index":3778},{"krate":0,"index":3782},{"krate":0,"index":3787},{"krate":0,"index":3793},{"krate":0,"index":5050},{"krate":0,"index":5057},{"krate":0,"index":5054},{"krate":0,"index":3802},{"krate":0,"index":5060},{"krate":0,"index":5067},{"krate":0,"index":5064},{"krate":0,"index":3808}],"decl_id":null,"docs":" Parallel iterator types for [strings][std::str]","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3702},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":402239,"byte_end":402253,"line_start":48,"line_end":48,"column_start":11,"column_end":25},"name":"ParallelString","qualname":"::str::ParallelString","value":"ParallelString","parent":null,"children":[{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3705},{"krate":0,"index":3707},{"krate":0,"index":3709},{"krate":0,"index":3710}],"decl_id":null,"docs":" Parallel extensions for strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3703},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":402370,"byte_end":402388,"line_start":51,"line_end":51,"column_start":8,"column_end":26},"name":"as_parallel_string","qualname":"::str::ParallelString::as_parallel_string","value":"fn (&self) -> &str","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Returns a plain string slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":402673,"byte_end":402682,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"par_chars","qualname":"::str::ParallelString::par_chars","value":"fn (&self) -> Chars","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":403333,"byte_end":403342,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"par_split","qualname":"::str::ParallelString::par_split","value":"fn <P> (&self, separator: P) -> Split<P>","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings separated by a\n given character or predicate, similar to `str::split`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3707},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":404167,"byte_end":404187,"line_start":103,"line_end":103,"column_start":8,"column_end":28},"name":"par_split_terminator","qualname":"::str::ParallelString::par_split_terminator","value":"fn <P> (&self, terminator: P) -> SplitTerminator<P>","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings terminated by a\n given character or predicate, similar to `str::split_terminator`.\n It's equivalent to `par_split`, except it doesn't produce an empty\n substring after a trailing terminator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3709},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":404854,"byte_end":404863,"line_start":122,"line_end":122,"column_start":8,"column_end":17},"name":"par_lines","qualname":"::str::ParallelString::par_lines","value":"fn (&self) -> Lines","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the lines of a string, ending with an\n optional carriage return and with a newline (`\\r\\n` or just `\\n`).\n The final line ending is optional, and line endings are not included in\n the output strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":405484,"byte_end":405504,"line_start":141,"line_end":141,"column_start":8,"column_end":28},"name":"par_split_whitespace","qualname":"::str::ParallelString::par_split_whitespace","value":"fn (&self) -> SplitWhitespace","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the sub-slices of a string that are\n separated by any amount of whitespace.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3715},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":406318,"byte_end":406325,"line_start":167,"line_end":167,"column_start":15,"column_end":22},"name":"Pattern","qualname":"::str::private::Pattern","value":"Pattern: Sized + Sync + Send","parent":null,"children":[{"krate":0,"index":5012},{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3718},{"krate":0,"index":3719}],"decl_id":null,"docs":" Pattern-matching trait for `ParallelString`, somewhat like a mix of\n `std::str::pattern::{Pattern, Searcher}`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3716},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":406384,"byte_end":406391,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"find_in","qualname":"::str::private::Pattern::find_in","value":"fn (&self, &str) -> Option<usize>","parent":{"krate":0,"index":3715},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3717},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":406434,"byte_end":406442,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"rfind_in","qualname":"::str::private::Pattern::rfind_in","value":"fn (&self, &str) -> Option<usize>","parent":{"krate":0,"index":3715},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":406485,"byte_end":406497,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"is_suffix_of","qualname":"::str::private::Pattern::is_suffix_of","value":"fn (&self, &str) -> bool","parent":{"krate":0,"index":3715},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3719},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":406531,"byte_end":406540,"line_start":172,"line_end":172,"column_start":12,"column_end":21},"name":"fold_with","qualname":"::str::private::Pattern::fold_with","value":"fn <'ch, F> (&self, &'ch str, folder: F, skip_last: bool) -> F","parent":{"krate":0,"index":3715},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5015},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":408081,"byte_end":408086,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"Chars","qualname":"::str::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":5017}],"decl_id":null,"docs":" Parallel iterator over the characters of a string\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5024},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":409152,"byte_end":409157,"line_start":282,"line_end":282,"column_start":12,"column_end":17},"name":"Split","qualname":"::str::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":5027},{"krate":0,"index":5028}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a pattern\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5037},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":410866,"byte_end":410881,"line_start":345,"line_end":345,"column_start":12,"column_end":27},"name":"SplitTerminator","qualname":"::str::SplitTerminator","value":"SplitTerminator {  }","parent":null,"children":[{"krate":0,"index":5040},{"krate":0,"index":5041}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a terminator pattern\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5050},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":412800,"byte_end":412805,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"Lines","qualname":"::str::Lines","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over lines in a string\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5060},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":413451,"byte_end":413466,"line_start":437,"line_end":437,"column_start":12,"column_end":27},"name":"SplitWhitespace","qualname":"::str::SplitWhitespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over substrings separated by whitespace\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","parent":null,"children":[{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":5070},{"krate":0,"index":5076},{"krate":0,"index":5073},{"krate":0,"index":3818},{"krate":0,"index":3823},{"krate":0,"index":3829},{"krate":0,"index":3836},{"krate":0,"index":3840},{"krate":0,"index":3847},{"krate":0,"index":3851},{"krate":0,"index":3855},{"krate":0,"index":3862},{"krate":0,"index":3867},{"krate":0,"index":3871}],"decl_id":null,"docs":" Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5070},"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":414211,"byte_end":414219,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5072}],"decl_id":null,"docs":" Parallel iterator that moves out of a vector.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/split_producer.rs","byte_start":8163,"byte_end":8176,"line_start":27,"line_end":27,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/split_producer.rs","byte_start":9598,"byte_end":9611,"line_start":71,"line_end":71,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/binary_heap.rs","byte_start":12704,"byte_end":12714,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/binary_heap.rs","byte_start":13155,"byte_end":13159,"line_start":39,"line_end":39,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_map.rs","byte_start":14325,"byte_end":14329,"line_start":35,"line_end":35,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_set.rs","byte_start":15809,"byte_end":15813,"line_start":35,"line_end":35,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_map.rs","byte_start":17043,"byte_end":17047,"line_start":36,"line_end":36,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_set.rs","byte_start":18662,"byte_end":18666,"line_start":36,"line_end":36,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/linked_list.rs","byte_start":19733,"byte_end":19737,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/vec_deque.rs","byte_start":21103,"byte_end":21107,"line_start":36,"line_end":36,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find.rs","byte_start":94492,"byte_end":94504,"line_start":19,"line_end":19,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find.rs","byte_start":94707,"byte_end":94719,"line_start":28,"line_end":28,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find.rs","byte_start":95310,"byte_end":95322,"line_start":54,"line_end":54,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find.rs","byte_start":95692,"byte_end":95702,"line_start":74,"line_end":74,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find.rs","byte_start":96177,"byte_end":96188,"line_start":99,"line_end":99,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find_first_last/mod.rs","byte_start":98710,"byte_end":98722,"line_start":67,"line_end":67,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find_first_last/mod.rs","byte_start":99309,"byte_end":99321,"line_start":86,"line_end":86,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find_first_last/mod.rs","byte_start":100317,"byte_end":100329,"line_start":118,"line_end":118,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find_first_last/mod.rs","byte_start":101875,"byte_end":101885,"line_start":160,"line_end":160,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find_first_last/mod.rs","byte_start":103655,"byte_end":103666,"line_start":213,"line_end":213,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":104775,"byte_end":104780,"line_start":32,"line_end":32,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":105980,"byte_end":105985,"line_start":66,"line_end":66,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":107083,"byte_end":107092,"line_start":102,"line_end":102,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":107886,"byte_end":107895,"line_start":125,"line_end":125,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":108554,"byte_end":108567,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":108813,"byte_end":108826,"line_start":166,"line_end":166,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":110357,"byte_end":110365,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":110580,"byte_end":110588,"line_start":227,"line_end":227,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":110889,"byte_end":110897,"line_start":242,"line_end":242,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":111023,"byte_end":111031,"line_start":248,"line_end":248,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":112042,"byte_end":112048,"line_start":31,"line_end":31,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":112375,"byte_end":112381,"line_start":47,"line_end":47,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":113083,"byte_end":113091,"line_start":76,"line_end":76,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":113647,"byte_end":113660,"line_start":102,"line_end":102,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":114774,"byte_end":114782,"line_start":150,"line_end":150,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":115541,"byte_end":115549,"line_start":177,"line_end":177,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":115709,"byte_end":115717,"line_start":186,"line_end":186,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/consumer.rs","byte_start":122715,"byte_end":122730,"line_start":25,"line_end":25,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/consumer.rs","byte_start":123083,"byte_end":123098,"line_start":36,"line_end":36,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/consumer.rs","byte_start":124079,"byte_end":124092,"line_start":66,"line_end":66,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/consumer.rs","byte_start":124978,"byte_end":124993,"line_start":95,"line_end":95,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/mod.rs","byte_start":118879,"byte_end":118886,"line_start":75,"line_end":75,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/mod.rs","byte_start":120541,"byte_end":120544,"line_start":119,"line_end":119,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/enumerate.rs","byte_start":131776,"byte_end":131785,"line_start":27,"line_end":27,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/enumerate.rs","byte_start":132123,"byte_end":132132,"line_start":43,"line_end":43,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/enumerate.rs","byte_start":132642,"byte_end":132650,"line_start":63,"line_end":63,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/enumerate.rs","byte_start":133275,"byte_end":133292,"line_start":88,"line_end":88,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":135053,"byte_end":135059,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":135524,"byte_end":135530,"line_start":38,"line_end":38,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":136078,"byte_end":136092,"line_start":60,"line_end":60,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":136293,"byte_end":136307,"line_start":69,"line_end":69,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":137028,"byte_end":137042,"line_start":97,"line_end":97,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":137434,"byte_end":137446,"line_start":115,"line_end":115,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":138589,"byte_end":138598,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":139078,"byte_end":139087,"line_start":38,"line_end":38,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":139660,"byte_end":139677,"line_start":61,"line_end":61,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":139880,"byte_end":139897,"line_start":70,"line_end":70,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":140665,"byte_end":140682,"line_start":98,"line_end":98,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":141092,"byte_end":141107,"line_start":116,"line_end":116,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":142276,"byte_end":142283,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":142747,"byte_end":142754,"line_start":38,"line_end":38,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":143375,"byte_end":143390,"line_start":64,"line_end":64,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":143582,"byte_end":143597,"line_start":73,"line_end":73,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":144371,"byte_end":144386,"line_start":102,"line_end":102,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":144842,"byte_end":144855,"line_start":123,"line_end":123,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flatten.rs","byte_start":146724,"byte_end":146731,"line_start":28,"line_end":28,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":147693,"byte_end":147696,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":147959,"byte_end":147967,"line_start":33,"line_end":33,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":148317,"byte_end":148327,"line_start":45,"line_end":45,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":148630,"byte_end":148640,"line_start":57,"line_end":57,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":149097,"byte_end":149104,"line_start":71,"line_end":71,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":149644,"byte_end":149652,"line_start":87,"line_end":87,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":149951,"byte_end":149958,"line_start":99,"line_end":99,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":150280,"byte_end":150288,"line_start":111,"line_end":111,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":150560,"byte_end":150566,"line_start":122,"line_end":122,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":150822,"byte_end":150828,"line_start":131,"line_end":131,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":151090,"byte_end":151096,"line_start":140,"line_end":140,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":151354,"byte_end":151360,"line_start":149,"line_end":149,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":151625,"byte_end":151631,"line_start":158,"line_end":158,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":152069,"byte_end":152072,"line_start":171,"line_end":171,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":164155,"byte_end":164163,"line_start":258,"line_end":258,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":165276,"byte_end":165290,"line_start":297,"line_end":297,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":167767,"byte_end":167775,"line_start":361,"line_end":361,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/for_each.rs","byte_start":172260,"byte_end":172275,"line_start":18,"line_end":18,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/for_each.rs","byte_start":172670,"byte_end":172685,"line_start":38,"line_end":38,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/for_each.rs","byte_start":173107,"byte_end":173122,"line_start":60,"line_end":60,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":174197,"byte_end":174201,"line_start":32,"line_end":32,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":174413,"byte_end":174417,"line_start":40,"line_end":40,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":175046,"byte_end":175058,"line_start":66,"line_end":66,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":175840,"byte_end":175852,"line_start":94,"line_end":94,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":176310,"byte_end":176320,"line_start":115,"line_end":115,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":177674,"byte_end":177682,"line_start":166,"line_end":166,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":177932,"byte_end":177940,"line_start":175,"line_end":175,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":178518,"byte_end":178534,"line_start":200,"line_end":200,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":179321,"byte_end":179337,"line_start":228,"line_end":228,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":180181,"byte_end":180195,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":180237,"byte_end":180251,"line_start":24,"line_end":24,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":180353,"byte_end":180367,"line_start":30,"line_end":30,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":180905,"byte_end":180919,"line_start":55,"line_end":55,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":181179,"byte_end":181193,"line_start":69,"line_end":69,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":181437,"byte_end":181449,"line_start":82,"line_end":82,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/skip.rs","byte_start":182827,"byte_end":182831,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/skip.rs","byte_start":183160,"byte_end":183164,"line_start":44,"line_end":44,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/skip.rs","byte_start":183842,"byte_end":183850,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/splitter.rs","byte_start":188710,"byte_end":188715,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/splitter.rs","byte_start":188917,"byte_end":188922,"line_start":134,"line_end":134,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/splitter.rs","byte_start":189414,"byte_end":189427,"line_start":156,"line_end":156,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/take.rs","byte_start":190806,"byte_end":190810,"line_start":27,"line_end":27,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/take.rs","byte_start":191139,"byte_end":191143,"line_start":43,"line_end":43,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/take.rs","byte_start":191803,"byte_end":191811,"line_start":67,"line_end":67,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":192728,"byte_end":192731,"line_start":21,"line_end":21,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":193178,"byte_end":193181,"line_start":41,"line_end":41,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":193661,"byte_end":193664,"line_start":60,"line_end":60,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":194510,"byte_end":194518,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":195197,"byte_end":195208,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":196314,"byte_end":196325,"line_start":164,"line_end":164,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":196513,"byte_end":196524,"line_start":173,"line_end":173,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":197227,"byte_end":197238,"line_start":199,"line_end":199,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":197644,"byte_end":197653,"line_start":218,"line_end":218,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":198696,"byte_end":198703,"line_start":21,"line_end":21,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":199246,"byte_end":199253,"line_start":43,"line_end":43,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":199781,"byte_end":199788,"line_start":63,"line_end":63,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":200774,"byte_end":200782,"line_start":95,"line_end":95,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":201571,"byte_end":201586,"line_start":125,"line_end":125,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":202885,"byte_end":202896,"line_start":181,"line_end":181,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":203300,"byte_end":203311,"line_start":198,"line_end":198,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":203625,"byte_end":203636,"line_start":209,"line_end":209,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":203993,"byte_end":204008,"line_start":227,"line_end":227,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":204239,"byte_end":204254,"line_start":237,"line_end":237,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":205086,"byte_end":205101,"line_start":267,"line_end":267,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":205582,"byte_end":205595,"line_start":288,"line_end":288,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":207219,"byte_end":207222,"line_start":29,"line_end":29,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":207606,"byte_end":207609,"line_start":46,"line_end":46,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":208358,"byte_end":208367,"line_start":73,"line_end":73,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":209076,"byte_end":209085,"line_start":94,"line_end":94,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":209796,"byte_end":209807,"line_start":120,"line_end":120,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip_eq.rs","byte_start":211469,"byte_end":211474,"line_start":30,"line_end":30,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip_eq.rs","byte_start":211866,"byte_end":211871,"line_start":47,"line_end":47,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":213289,"byte_end":213299,"line_start":32,"line_end":32,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":213676,"byte_end":213686,"line_start":49,"line_end":49,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":214639,"byte_end":214648,"line_start":86,"line_end":86,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":215452,"byte_end":215461,"line_start":113,"line_end":113,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":216116,"byte_end":216134,"line_start":140,"line_end":140,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":216418,"byte_end":216436,"line_start":149,"line_end":149,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":219269,"byte_end":219282,"line_start":243,"line_end":243,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":220416,"byte_end":220429,"line_start":281,"line_end":281,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":220995,"byte_end":221008,"line_start":301,"line_end":301,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave_shortest.rs","byte_start":222597,"byte_end":222615,"line_start":43,"line_end":43,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave_shortest.rs","byte_start":222992,"byte_end":223010,"line_start":60,"line_end":60,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":224392,"byte_end":224403,"line_start":32,"line_end":32,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":224970,"byte_end":224981,"line_start":54,"line_end":54,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":226022,"byte_end":226030,"line_start":90,"line_end":90,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":226581,"byte_end":226600,"line_start":116,"line_end":116,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":226857,"byte_end":226876,"line_start":129,"line_end":129,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":229051,"byte_end":229066,"line_start":206,"line_end":206,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":229843,"byte_end":229858,"line_start":234,"line_end":234,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":230511,"byte_end":230526,"line_start":255,"line_end":255,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":230904,"byte_end":230923,"line_start":274,"line_end":274,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":231159,"byte_end":231178,"line_start":286,"line_end":286,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":232261,"byte_end":232280,"line_start":322,"line_end":322,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":232825,"byte_end":232842,"line_start":347,"line_end":347,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":233997,"byte_end":234003,"line_start":21,"line_end":21,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":234468,"byte_end":234474,"line_start":41,"line_end":41,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":234937,"byte_end":234943,"line_start":59,"line_end":59,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":235783,"byte_end":235791,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1884},{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":236463,"byte_end":236477,"line_start":113,"line_end":113,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":237667,"byte_end":237681,"line_start":163,"line_end":163,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":237878,"byte_end":237892,"line_start":172,"line_end":172,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":238597,"byte_end":238611,"line_start":197,"line_end":197,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":239007,"byte_end":239019,"line_start":215,"line_end":215,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":239700,"byte_end":239709,"line_start":247,"line_end":247,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":240612,"byte_end":240621,"line_start":283,"line_end":283,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":240727,"byte_end":240736,"line_start":289,"line_end":289,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/noop.rs","byte_start":241079,"byte_end":241091,"line_start":5,"line_end":5,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/noop.rs","byte_start":241175,"byte_end":241187,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/noop.rs","byte_start":241531,"byte_end":241543,"line_start":29,"line_end":29,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/noop.rs","byte_start":241883,"byte_end":241895,"line_start":48,"line_end":48,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1995},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/noop.rs","byte_start":242082,"byte_end":242093,"line_start":60,"line_end":60,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/rev.rs","byte_start":242865,"byte_end":242868,"line_start":25,"line_end":25,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/rev.rs","byte_start":243197,"byte_end":243200,"line_start":41,"line_end":41,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2017},{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/rev.rs","byte_start":243905,"byte_end":243913,"line_start":66,"line_end":66,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/rev.rs","byte_start":244412,"byte_end":244423,"line_start":88,"line_end":88,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":245875,"byte_end":245881,"line_start":29,"line_end":29,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":246210,"byte_end":246216,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":246891,"byte_end":246899,"line_start":69,"line_end":69,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":247518,"byte_end":247532,"line_start":94,"line_end":94,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":249053,"byte_end":249059,"line_start":156,"line_end":156,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":249388,"byte_end":249394,"line_start":172,"line_end":172,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2099}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":250069,"byte_end":250077,"line_start":196,"line_end":196,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":250696,"byte_end":250710,"line_start":221,"line_end":221,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":251922,"byte_end":251933,"line_start":24,"line_end":24,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":251955,"byte_end":251966,"line_start":26,"line_end":26,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":252086,"byte_end":252097,"line_start":32,"line_end":32,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":252542,"byte_end":252553,"line_start":52,"line_end":52,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2160},{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":252768,"byte_end":252779,"line_start":64,"line_end":64,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":252952,"byte_end":252961,"line_start":77,"line_end":77,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2175},{"krate":0,"index":2176}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":253889,"byte_end":253904,"line_start":24,"line_end":24,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":253926,"byte_end":253941,"line_start":26,"line_end":26,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2196}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":254069,"byte_end":254084,"line_start":32,"line_end":32,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":254565,"byte_end":254580,"line_start":52,"line_end":52,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":254811,"byte_end":254826,"line_start":64,"line_end":64,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2213}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":255011,"byte_end":255024,"line_start":77,"line_end":77,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":256228,"byte_end":256234,"line_start":27,"line_end":27,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":256682,"byte_end":256688,"line_start":45,"line_end":45,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2244},{"krate":0,"index":2246},{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":257338,"byte_end":257346,"line_start":69,"line_end":69,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2256},{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":257893,"byte_end":257907,"line_start":91,"line_end":91,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":258769,"byte_end":258783,"line_start":130,"line_end":130,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":258901,"byte_end":258915,"line_start":136,"line_end":136,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":259500,"byte_end":259514,"line_start":158,"line_end":158,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":259840,"byte_end":259852,"line_start":176,"line_end":176,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":260800,"byte_end":260807,"line_start":22,"line_end":22,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":261279,"byte_end":261286,"line_start":42,"line_end":42,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":261746,"byte_end":261753,"line_start":60,"line_end":60,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2332},{"krate":0,"index":2334},{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":262598,"byte_end":262606,"line_start":89,"line_end":89,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2346},{"krate":0,"index":2347}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":263271,"byte_end":263286,"line_start":115,"line_end":115,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":264424,"byte_end":264439,"line_start":163,"line_end":163,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2377}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":264640,"byte_end":264655,"line_start":172,"line_end":172,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":265374,"byte_end":265389,"line_start":199,"line_end":199,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2394},{"krate":0,"index":2395}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":265777,"byte_end":265790,"line_start":217,"line_end":217,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/while_some.rs","byte_start":267034,"byte_end":267043,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2423},{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/while_some.rs","byte_start":267674,"byte_end":267691,"line_start":54,"line_end":54,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/while_some.rs","byte_start":268423,"byte_end":268440,"line_start":81,"line_end":81,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2445},{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/while_some.rs","byte_start":268816,"byte_end":268831,"line_start":99,"line_end":99,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":270864,"byte_end":270874,"line_start":54,"line_end":54,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":271189,"byte_end":271199,"line_start":65,"line_end":65,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":271530,"byte_end":271538,"line_start":77,"line_end":77,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2506}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":271864,"byte_end":271872,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":272208,"byte_end":272216,"line_start":102,"line_end":102,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":272503,"byte_end":272511,"line_start":113,"line_end":113,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":272816,"byte_end":272823,"line_start":125,"line_end":125,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2531}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":273299,"byte_end":273306,"line_start":139,"line_end":139,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":273710,"byte_end":273717,"line_start":153,"line_end":153,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":274072,"byte_end":274079,"line_start":165,"line_end":165,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":274443,"byte_end":274453,"line_start":178,"line_end":178,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":275056,"byte_end":275066,"line_start":200,"line_end":200,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":275373,"byte_end":275379,"line_start":212,"line_end":212,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":276319,"byte_end":276325,"line_start":240,"line_end":240,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":276604,"byte_end":276610,"line_start":249,"line_end":249,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":276896,"byte_end":276902,"line_start":258,"line_end":258,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2582}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":277203,"byte_end":277209,"line_start":267,"line_end":267,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":278118,"byte_end":278126,"line_start":298,"line_end":298,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":278431,"byte_end":278439,"line_start":309,"line_end":309,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":278871,"byte_end":278874,"line_start":324,"line_end":324,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":281887,"byte_end":281892,"line_start":86,"line_end":86,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":282821,"byte_end":282830,"line_start":121,"line_end":121,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":283935,"byte_end":283947,"line_start":161,"line_end":161,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":284595,"byte_end":284601,"line_start":188,"line_end":188,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":286035,"byte_end":286041,"line_start":237,"line_end":237,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":286989,"byte_end":287002,"line_start":276,"line_end":276,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":288214,"byte_end":288227,"line_start":319,"line_end":319,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2746}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":288907,"byte_end":288918,"line_start":348,"line_end":348,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":289684,"byte_end":289696,"line_start":381,"line_end":381,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":290725,"byte_end":290731,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2785},{"krate":0,"index":2786}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":291580,"byte_end":291586,"line_start":55,"line_end":55,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2790},{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":292009,"byte_end":292023,"line_start":73,"line_end":73,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":292965,"byte_end":292972,"line_start":111,"line_end":111,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2809}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":293284,"byte_end":293291,"line_start":127,"line_end":127,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":293860,"byte_end":293875,"line_start":154,"line_end":154,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":294523,"byte_end":294527,"line_start":177,"line_end":177,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":294905,"byte_end":294909,"line_start":196,"line_end":196,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2838}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":295038,"byte_end":295042,"line_start":203,"line_end":203,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2841}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":295845,"byte_end":295850,"line_start":34,"line_end":34,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":295940,"byte_end":295945,"line_start":40,"line_end":40,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":296077,"byte_end":296082,"line_start":46,"line_end":46,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":296363,"byte_end":296368,"line_start":60,"line_end":60,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":296838,"byte_end":296851,"line_start":81,"line_end":81,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/once.rs","byte_start":298151,"byte_end":298155,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2900},{"krate":0,"index":2901},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/once.rs","byte_start":298436,"byte_end":298440,"line_start":48,"line_end":48,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2908},{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":29930,"byte_end":29931,"line_start":239,"line_end":239,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":31439,"byte_end":31440,"line_start":286,"line_end":286,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":71077,"byte_end":71078,"line_start":1426,"line_end":1426,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":299809,"byte_end":299815,"line_start":27,"line_end":27,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":299988,"byte_end":299996,"line_start":36,"line_end":36,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":300286,"byte_end":300294,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3147},{"krate":0,"index":3148}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":301446,"byte_end":301450,"line_start":89,"line_end":89,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":302868,"byte_end":302882,"line_start":144,"line_end":144,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":303499,"byte_end":303505,"line_start":168,"line_end":168,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3179}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/range.rs","byte_start":306033,"byte_end":306038,"line_start":49,"line_end":49,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/range.rs","byte_start":306314,"byte_end":306326,"line_start":64,"line_end":64,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/result.rs","byte_start":310842,"byte_end":310848,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/result.rs","byte_start":311266,"byte_end":311270,"line_start":41,"line_end":41,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/result.rs","byte_start":312469,"byte_end":312475,"line_start":88,"line_end":88,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3246}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mergesort.rs","byte_start":341651,"byte_end":341661,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mergesort.rs","byte_start":344582,"byte_end":344588,"line_start":101,"line_end":101,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3278}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mergesort.rs","byte_start":344837,"byte_end":344850,"line_start":113,"line_end":113,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mergesort.rs","byte_start":348626,"byte_end":348635,"line_start":216,"line_end":216,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3296}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mergesort.rs","byte_start":360064,"byte_end":360069,"line_start":514,"line_end":514,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/quicksort.rs","byte_start":369297,"byte_end":369308,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/quicksort.rs","byte_start":369538,"byte_end":369544,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/quicksort.rs","byte_start":369751,"byte_end":369761,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":328590,"byte_end":328594,"line_start":439,"line_end":439,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":328721,"byte_end":328725,"line_start":445,"line_end":445,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":329046,"byte_end":329050,"line_start":459,"line_end":459,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3503}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":329551,"byte_end":329563,"line_start":481,"line_end":481,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":330136,"byte_end":330142,"line_start":503,"line_end":503,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":330271,"byte_end":330277,"line_start":509,"line_end":509,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3526}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":330600,"byte_end":330606,"line_start":523,"line_end":523,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3530},{"krate":0,"index":3532},{"krate":0,"index":3533}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":331281,"byte_end":331295,"line_start":549,"line_end":549,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":332081,"byte_end":332088,"line_start":579,"line_end":579,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":332218,"byte_end":332225,"line_start":585,"line_end":585,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":332548,"byte_end":332555,"line_start":599,"line_end":599,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3561},{"krate":0,"index":3563},{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":333281,"byte_end":333296,"line_start":626,"line_end":626,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":3577}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":334136,"byte_end":334143,"line_start":656,"line_end":656,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":334468,"byte_end":334475,"line_start":670,"line_end":670,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3591}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":334986,"byte_end":335001,"line_start":692,"line_end":692,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3602},{"krate":0,"index":3603}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":335615,"byte_end":335624,"line_start":714,"line_end":714,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3610}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":335951,"byte_end":335960,"line_start":728,"line_end":728,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3614},{"krate":0,"index":3616},{"krate":0,"index":3617}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":336645,"byte_end":336662,"line_start":754,"line_end":754,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":337435,"byte_end":337440,"line_start":783,"line_end":783,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":337591,"byte_end":337596,"line_start":789,"line_end":789,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":337814,"byte_end":337819,"line_start":797,"line_end":797,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3651},{"krate":0,"index":3652}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":339314,"byte_end":339322,"line_start":855,"line_end":855,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3675}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":339543,"byte_end":339551,"line_start":863,"line_end":863,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3680},{"krate":0,"index":3681}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":407353,"byte_end":407355,"line_start":207,"line_end":207,"column_start":54,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5014},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3735}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":408201,"byte_end":408206,"line_start":246,"line_end":246,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3743},{"krate":0,"index":3744}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":408461,"byte_end":408474,"line_start":256,"line_end":256,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":409241,"byte_end":409246,"line_start":287,"line_end":287,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":409447,"byte_end":409452,"line_start":296,"line_end":296,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3759},{"krate":0,"index":3760}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":411101,"byte_end":411116,"line_start":355,"line_end":355,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3781}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":411322,"byte_end":411345,"line_start":364,"line_end":364,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3786}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":411653,"byte_end":411668,"line_start":373,"line_end":373,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3790},{"krate":0,"index":3791}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":412011,"byte_end":412034,"line_start":384,"line_end":384,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3800}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":412854,"byte_end":412859,"line_start":415,"line_end":415,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3804},{"krate":0,"index":3805}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":413515,"byte_end":413530,"line_start":439,"line_end":439,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3810},{"krate":0,"index":3811}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":414290,"byte_end":414293,"line_start":18,"line_end":18,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3820},{"krate":0,"index":3821},{"krate":0,"index":3822}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":414466,"byte_end":414474,"line_start":27,"line_end":27,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3828}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":414766,"byte_end":414774,"line_start":41,"line_end":41,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3831},{"krate":0,"index":3833},{"krate":0,"index":3834}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":415894,"byte_end":415905,"line_start":77,"line_end":77,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":416548,"byte_end":416559,"line_start":95,"line_end":95,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3850}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":416907,"byte_end":416917,"line_start":108,"line_end":108,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3858},{"krate":0,"index":3859},{"krate":0,"index":3861}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":417224,"byte_end":417234,"line_start":121,"line_end":121,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3865}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":417424,"byte_end":417434,"line_start":127,"line_end":127,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3870}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":417540,"byte_end":417550,"line_start":133,"line_end":133,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3874}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/par_either.rs","byte_start":417912,"byte_end":417918,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3887}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/par_either.rs","byte_start":418438,"byte_end":418444,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3891},{"krate":0,"index":3893},{"krate":0,"index":3894}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/par_either.rs","byte_start":419234,"byte_end":419240,"line_start":55,"line_end":55,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3900}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":3841,"byte_end":3852,"line_start":96,"line_end":96,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":59}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/mod.rs","byte_start":12118,"byte_end":12129,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":61}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/mod.rs","byte_start":12139,"byte_end":12148,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/mod.rs","byte_start":12158,"byte_end":12167,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":85}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/mod.rs","byte_start":12177,"byte_end":12185,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":94}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/mod.rs","byte_start":12195,"byte_end":12203,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":107}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/mod.rs","byte_start":12213,"byte_end":12224,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":119}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/mod.rs","byte_start":12234,"byte_end":12243,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":3862,"byte_end":3866,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":150}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":26046,"byte_end":26054,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":866}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":3876,"byte_end":3882,"line_start":98,"line_end":98,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3125}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":3892,"byte_end":3899,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3182}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":3909,"byte_end":3914,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3193}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":3924,"byte_end":3930,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3212}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":3940,"byte_end":3945,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3249}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":3955,"byte_end":3958,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3694}},{"kind":"Mod","span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/lib.rs","byte_start":3968,"byte_end":3971,"line_start":104,"line_end":104,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3814}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/split_producer.rs","byte_start":7744,"byte_end":7749,"line_start":17,"line_end":17,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/split_producer.rs","byte_start":8163,"byte_end":8176,"line_start":27,"line_end":27,"column_start":16,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/split_producer.rs","byte_start":9598,"byte_end":9611,"line_start":71,"line_end":71,"column_start":38,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":26},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/binary_heap.rs","byte_start":12704,"byte_end":12714,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":282},"to":{"krate":0,"index":2914}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/binary_heap.rs","byte_start":13155,"byte_end":13159,"line_start":39,"line_end":39,"column_start":35,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3938},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_map.rs","byte_start":14325,"byte_end":14329,"line_start":35,"line_end":35,"column_start":44,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3990},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/btree_set.rs","byte_start":15809,"byte_end":15813,"line_start":35,"line_end":35,"column_start":40,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4060},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_map.rs","byte_start":17043,"byte_end":17047,"line_start":36,"line_end":36,"column_start":50,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4105},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/hash_set.rs","byte_start":18662,"byte_end":18666,"line_start":36,"line_end":36,"column_start":41,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4178},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/linked_list.rs","byte_start":19733,"byte_end":19737,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/collections/vec_deque.rs","byte_start":21103,"byte_end":21107,"line_start":36,"line_end":36,"column_start":29,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4294},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find.rs","byte_start":94492,"byte_end":94504,"line_start":19,"line_end":19,"column_start":13,"column_end":25},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find.rs","byte_start":94707,"byte_end":94719,"line_start":28,"line_end":28,"column_start":36,"column_end":48},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":169},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find.rs","byte_start":95310,"byte_end":95322,"line_start":54,"line_end":54,"column_start":45,"column_end":57},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":169},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find.rs","byte_start":95692,"byte_end":95702,"line_start":74,"line_end":74,"column_start":30,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":194},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find.rs","byte_start":96177,"byte_end":96188,"line_start":99,"line_end":99,"column_start":32,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":209},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find_first_last/mod.rs","byte_start":98710,"byte_end":98722,"line_start":67,"line_end":67,"column_start":13,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find_first_last/mod.rs","byte_start":99309,"byte_end":99321,"line_start":86,"line_end":86,"column_start":32,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":228},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find_first_last/mod.rs","byte_start":100317,"byte_end":100329,"line_start":118,"line_end":118,"column_start":41,"column_end":53},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":228},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find_first_last/mod.rs","byte_start":101875,"byte_end":101885,"line_start":160,"line_end":160,"column_start":51,"column_end":61},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":257},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/find_first_last/mod.rs","byte_start":103655,"byte_end":103666,"line_start":213,"line_end":213,"column_start":32,"column_end":43},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":274},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":104775,"byte_end":104780,"line_start":32,"line_end":32,"column_start":33,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4348},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":105980,"byte_end":105985,"line_start":66,"line_end":66,"column_start":40,"column_end":45},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4348},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":107083,"byte_end":107092,"line_start":102,"line_end":102,"column_start":51,"column_end":60},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":307},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":107886,"byte_end":107895,"line_start":125,"line_end":125,"column_start":51,"column_end":60},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":319},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":108554,"byte_end":108567,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":108813,"byte_end":108826,"line_start":166,"line_end":166,"column_start":25,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":331},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":110357,"byte_end":110365,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":110580,"byte_end":110588,"line_start":227,"line_end":227,"column_start":25,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":110889,"byte_end":110897,"line_start":242,"line_end":242,"column_start":34,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":3380}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chain.rs","byte_start":111023,"byte_end":111031,"line_start":248,"line_end":248,"column_start":36,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":3360}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":112042,"byte_end":112048,"line_start":31,"line_end":31,"column_start":30,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4361},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":112375,"byte_end":112381,"line_start":47,"line_end":47,"column_start":37,"column_end":43},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4361},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":113083,"byte_end":113091,"line_start":76,"line_end":76,"column_start":45,"column_end":53},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":394},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":113647,"byte_end":113660,"line_start":102,"line_end":102,"column_start":22,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":114774,"byte_end":114782,"line_start":150,"line_end":150,"column_start":22,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":115541,"byte_end":115549,"line_start":177,"line_end":177,"column_start":31,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":3380}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/chunks.rs","byte_start":115709,"byte_end":115717,"line_start":186,"line_end":186,"column_start":33,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":3360}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/consumer.rs","byte_start":122715,"byte_end":122730,"line_start":25,"line_end":25,"column_start":24,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/consumer.rs","byte_start":123083,"byte_end":123098,"line_start":36,"line_end":36,"column_start":40,"column_end":55},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":454},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/consumer.rs","byte_start":124079,"byte_end":124092,"line_start":66,"line_end":66,"column_start":38,"column_end":51},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":459},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/consumer.rs","byte_start":124978,"byte_end":124993,"line_start":95,"line_end":95,"column_start":49,"column_end":64},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":454},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/mod.rs","byte_start":118879,"byte_end":118886,"line_start":75,"line_end":75,"column_start":24,"column_end":31},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/collect/mod.rs","byte_start":120541,"byte_end":120544,"line_start":119,"line_end":119,"column_start":31,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":5,"index":3569},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/enumerate.rs","byte_start":131776,"byte_end":131785,"line_start":27,"line_end":27,"column_start":30,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4371},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/enumerate.rs","byte_start":132123,"byte_end":132132,"line_start":43,"line_end":43,"column_start":37,"column_end":46},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4371},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/enumerate.rs","byte_start":132642,"byte_end":132650,"line_start":63,"line_end":63,"column_start":45,"column_end":53},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/enumerate.rs","byte_start":133275,"byte_end":133292,"line_start":88,"line_end":88,"column_start":22,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":551},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":135053,"byte_end":135059,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4380},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":135524,"byte_end":135530,"line_start":38,"line_end":38,"column_start":33,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4380},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":136078,"byte_end":136092,"line_start":60,"line_end":60,"column_start":16,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":136293,"byte_end":136307,"line_start":69,"line_end":69,"column_start":39,"column_end":53},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":583},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":137028,"byte_end":137042,"line_start":97,"line_end":97,"column_start":48,"column_end":62},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":583},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter.rs","byte_start":137434,"byte_end":137446,"line_start":115,"line_end":115,"column_start":33,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":612},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":138589,"byte_end":138598,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4389},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":139078,"byte_end":139087,"line_start":38,"line_end":38,"column_start":36,"column_end":45},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4389},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":139660,"byte_end":139677,"line_start":61,"line_end":61,"column_start":20,"column_end":37},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":139880,"byte_end":139897,"line_start":70,"line_end":70,"column_start":38,"column_end":55},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":648},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":140665,"byte_end":140682,"line_start":98,"line_end":98,"column_start":47,"column_end":64},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":648},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/filter_map.rs","byte_start":141092,"byte_end":141107,"line_start":116,"line_end":116,"column_start":36,"column_end":51},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":679},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":142276,"byte_end":142283,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4398},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":142747,"byte_end":142754,"line_start":38,"line_end":38,"column_start":37,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4398},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":143375,"byte_end":143390,"line_start":64,"line_end":64,"column_start":16,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":143582,"byte_end":143597,"line_start":73,"line_end":73,"column_start":38,"column_end":53},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":716},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":144371,"byte_end":144386,"line_start":102,"line_end":102,"column_start":47,"column_end":62},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":716},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flat_map.rs","byte_start":144842,"byte_end":144855,"line_start":123,"line_end":123,"column_start":36,"column_end":49},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":747},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/flatten.rs","byte_start":146724,"byte_end":146731,"line_start":28,"line_end":28,"column_start":34,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4407},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":147693,"byte_end":147696,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"kind":{"Impl":{"id":95}},"from":{"krate":5,"index":3569},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":147959,"byte_end":147967,"line_start":33,"line_end":33,"column_start":37,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":5,"index":1985},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":148317,"byte_end":148327,"line_start":45,"line_end":45,"column_start":37,"column_end":47},"kind":{"Impl":{"id":97}},"from":{"krate":5,"index":282},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":148630,"byte_end":148640,"line_start":57,"line_end":57,"column_start":37,"column_end":47},"kind":{"Impl":{"id":98}},"from":{"krate":5,"index":1720},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":149097,"byte_end":149104,"line_start":71,"line_end":71,"column_start":48,"column_end":55},"kind":{"Impl":{"id":99}},"from":{"krate":1,"index":6116},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":149644,"byte_end":149652,"line_start":87,"line_end":87,"column_start":45,"column_end":53},"kind":{"Impl":{"id":100}},"from":{"krate":5,"index":926},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":149951,"byte_end":149958,"line_start":99,"line_end":99,"column_start":40,"column_end":47},"kind":{"Impl":{"id":101}},"from":{"krate":1,"index":6142},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":150280,"byte_end":150288,"line_start":111,"line_end":111,"column_start":37,"column_end":45},"kind":{"Impl":{"id":102}},"from":{"krate":5,"index":4005},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":150560,"byte_end":150566,"line_start":122,"line_end":122,"column_start":37,"column_end":43},"kind":{"Impl":{"id":103}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":150822,"byte_end":150828,"line_start":131,"line_end":131,"column_start":45,"column_end":51},"kind":{"Impl":{"id":104}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":151090,"byte_end":151096,"line_start":140,"line_end":140,"column_start":44,"column_end":50},"kind":{"Impl":{"id":105}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":151354,"byte_end":151360,"line_start":149,"line_end":149,"column_start":39,"column_end":45},"kind":{"Impl":{"id":106}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":151625,"byte_end":151631,"line_start":158,"line_end":158,"column_start":49,"column_end":55},"kind":{"Impl":{"id":107}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/from_par_iter.rs","byte_start":152069,"byte_end":152072,"line_start":171,"line_end":171,"column_start":52,"column_end":55},"kind":{"Impl":{"id":108}},"from":{"krate":5,"index":2925},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":155710,"byte_end":155714,"line_start":58,"line_end":58,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":155717,"byte_end":155722,"line_start":58,"line_end":58,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":158719,"byte_end":158723,"line_start":126,"line_end":126,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":158726,"byte_end":158731,"line_start":126,"line_end":126,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":160039,"byte_end":160044,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":162054,"byte_end":162062,"line_start":210,"line_end":210,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":885},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":163167,"byte_end":163171,"line_start":233,"line_end":233,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":163174,"byte_end":163179,"line_start":233,"line_end":233,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":164155,"byte_end":164163,"line_start":258,"line_end":258,"column_start":6,"column_end":14},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":165276,"byte_end":165290,"line_start":297,"line_end":297,"column_start":6,"column_end":20},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/plumbing/mod.rs","byte_start":167767,"byte_end":167775,"line_start":361,"line_end":361,"column_start":40,"column_end":48},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":922},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/for_each.rs","byte_start":172260,"byte_end":172275,"line_start":18,"line_end":18,"column_start":32,"column_end":47},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":956},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/for_each.rs","byte_start":172670,"byte_end":172685,"line_start":38,"line_end":38,"column_start":30,"column_end":45},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":956},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/for_each.rs","byte_start":173107,"byte_end":173122,"line_start":60,"line_end":60,"column_start":41,"column_end":56},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":956},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":174197,"byte_end":174201,"line_start":32,"line_end":32,"column_start":52,"column_end":56},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4427},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":174413,"byte_end":174417,"line_start":40,"line_end":40,"column_start":40,"column_end":44},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4427},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":175046,"byte_end":175058,"line_start":66,"line_end":66,"column_start":42,"column_end":54},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1011},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":175840,"byte_end":175852,"line_start":94,"line_end":94,"column_start":51,"column_end":63},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1011},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":176310,"byte_end":176320,"line_start":115,"line_end":115,"column_start":37,"column_end":47},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1041},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":177674,"byte_end":177682,"line_start":166,"line_end":166,"column_start":58,"column_end":66},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4439},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":177932,"byte_end":177940,"line_start":175,"line_end":175,"column_start":36,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4439},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":178518,"byte_end":178534,"line_start":200,"line_end":200,"column_start":38,"column_end":54},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1075},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/fold.rs","byte_start":179321,"byte_end":179337,"line_start":228,"line_end":228,"column_start":47,"column_end":63},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1075},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":180181,"byte_end":180195,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1114},"to":{"krate":2,"index":1445}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":180237,"byte_end":180251,"line_start":24,"line_end":24,"column_start":27,"column_end":41},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1114},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":180353,"byte_end":180367,"line_start":30,"line_end":30,"column_start":36,"column_end":50},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1114},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":180905,"byte_end":180919,"line_start":55,"line_end":55,"column_start":45,"column_end":59},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1114},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":181179,"byte_end":181193,"line_start":69,"line_end":69,"column_start":35,"column_end":49},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1114},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/reduce.rs","byte_start":181437,"byte_end":181449,"line_start":82,"line_end":82,"column_start":30,"column_end":42},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1153},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/skip.rs","byte_start":182827,"byte_end":182831,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4451},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/skip.rs","byte_start":183160,"byte_end":183164,"line_start":44,"line_end":44,"column_start":37,"column_end":41},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4451},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/skip.rs","byte_start":183842,"byte_end":183850,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1189},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/splitter.rs","byte_start":188710,"byte_end":188715,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4461},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/splitter.rs","byte_start":188917,"byte_end":188922,"line_start":134,"line_end":134,"column_start":33,"column_end":38},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4461},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/splitter.rs","byte_start":189414,"byte_end":189427,"line_start":156,"line_end":156,"column_start":38,"column_end":51},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1219},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/take.rs","byte_start":190806,"byte_end":190810,"line_start":27,"line_end":27,"column_start":30,"column_end":34},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4470},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/take.rs","byte_start":191139,"byte_end":191143,"line_start":43,"line_end":43,"column_start":37,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4470},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/take.rs","byte_start":191803,"byte_end":191811,"line_start":67,"line_end":67,"column_start":45,"column_end":53},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1256},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":192728,"byte_end":192731,"line_start":21,"line_end":21,"column_start":48,"column_end":51},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4480},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":193178,"byte_end":193181,"line_start":41,"line_end":41,"column_start":36,"column_end":39},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4480},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":193661,"byte_end":193664,"line_start":60,"line_end":60,"column_start":43,"column_end":46},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4480},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":194510,"byte_end":194518,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":195197,"byte_end":195208,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1311},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":196314,"byte_end":196325,"line_start":164,"line_end":164,"column_start":16,"column_end":27},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":196513,"byte_end":196524,"line_start":173,"line_end":173,"column_start":38,"column_end":49},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1330},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":197227,"byte_end":197238,"line_start":199,"line_end":199,"column_start":47,"column_end":58},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1330},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map.rs","byte_start":197644,"byte_end":197653,"line_start":218,"line_end":218,"column_start":36,"column_end":45},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1361},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":198696,"byte_end":198703,"line_start":21,"line_end":21,"column_start":58,"column_end":65},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4489},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":199246,"byte_end":199253,"line_start":43,"line_end":43,"column_start":39,"column_end":46},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4489},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":199781,"byte_end":199788,"line_start":63,"line_end":63,"column_start":46,"column_end":53},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4489},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":200774,"byte_end":200782,"line_start":95,"line_end":95,"column_start":54,"column_end":62},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1412},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":201571,"byte_end":201586,"line_start":125,"line_end":125,"column_start":35,"column_end":50},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1428},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":202885,"byte_end":202896,"line_start":181,"line_end":181,"column_start":35,"column_end":46},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":203300,"byte_end":203311,"line_start":198,"line_end":198,"column_start":46,"column_end":57},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":3360}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":203625,"byte_end":203636,"line_start":209,"line_end":209,"column_start":44,"column_end":55},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":3380}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":203993,"byte_end":204008,"line_start":227,"line_end":227,"column_start":19,"column_end":34},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":204239,"byte_end":204254,"line_start":237,"line_end":237,"column_start":41,"column_end":56},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1482},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":205086,"byte_end":205101,"line_start":267,"line_end":267,"column_start":50,"column_end":65},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1482},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/map_with.rs","byte_start":205582,"byte_end":205595,"line_start":288,"line_end":288,"column_start":39,"column_end":52},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1518},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":207219,"byte_end":207222,"line_start":29,"line_end":29,"column_start":33,"column_end":36},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4501},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":207606,"byte_end":207609,"line_start":46,"line_end":46,"column_start":40,"column_end":43},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4501},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":208358,"byte_end":208367,"line_start":73,"line_end":73,"column_start":54,"column_end":63},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1564},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":209076,"byte_end":209085,"line_start":94,"line_end":94,"column_start":54,"column_end":63},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1576},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip.rs","byte_start":209796,"byte_end":209807,"line_start":120,"line_end":120,"column_start":45,"column_end":56},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1588},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip_eq.rs","byte_start":211469,"byte_end":211474,"line_start":30,"line_end":30,"column_start":33,"column_end":38},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4514},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/zip_eq.rs","byte_start":211866,"byte_end":211871,"line_start":47,"line_end":47,"column_start":40,"column_end":45},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4514},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":213289,"byte_end":213299,"line_start":32,"line_end":32,"column_start":33,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4526},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":213676,"byte_end":213686,"line_start":49,"line_end":49,"column_start":40,"column_end":50},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4526},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":214639,"byte_end":214648,"line_start":86,"line_end":86,"column_start":51,"column_end":60},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1648},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":215452,"byte_end":215461,"line_start":113,"line_end":113,"column_start":51,"column_end":60},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1662},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":216116,"byte_end":216134,"line_start":140,"line_end":140,"column_start":12,"column_end":30},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":216418,"byte_end":216436,"line_start":149,"line_end":149,"column_start":25,"column_end":43},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1676},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":219269,"byte_end":219282,"line_start":243,"line_end":243,"column_start":25,"column_end":38},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1698},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":220416,"byte_end":220429,"line_start":281,"line_end":281,"column_start":36,"column_end":49},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1698},"to":{"krate":2,"index":3360}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave.rs","byte_start":220995,"byte_end":221008,"line_start":301,"line_end":301,"column_start":34,"column_end":47},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1698},"to":{"krate":2,"index":3380}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave_shortest.rs","byte_start":222597,"byte_end":222615,"line_start":43,"line_end":43,"column_start":33,"column_end":51},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4539},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/interleave_shortest.rs","byte_start":222992,"byte_end":223010,"line_start":60,"line_end":60,"column_start":40,"column_end":58},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4539},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":224392,"byte_end":224403,"line_start":32,"line_end":32,"column_start":30,"column_end":41},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4551},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":224970,"byte_end":224981,"line_start":54,"line_end":54,"column_start":37,"column_end":48},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4551},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":226022,"byte_end":226030,"line_start":90,"line_end":90,"column_start":45,"column_end":53},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1761},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":226581,"byte_end":226600,"line_start":116,"line_end":116,"column_start":9,"column_end":28},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":226857,"byte_end":226876,"line_start":129,"line_end":129,"column_start":22,"column_end":41},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1773},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":229051,"byte_end":229066,"line_start":206,"line_end":206,"column_start":22,"column_end":37},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1792},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":229843,"byte_end":229858,"line_start":234,"line_end":234,"column_start":33,"column_end":48},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1792},"to":{"krate":2,"index":3360}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":230511,"byte_end":230526,"line_start":255,"line_end":255,"column_start":31,"column_end":46},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1792},"to":{"krate":2,"index":3380}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":230904,"byte_end":230923,"line_start":274,"line_end":274,"column_start":12,"column_end":31},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":231159,"byte_end":231178,"line_start":286,"line_end":286,"column_start":28,"column_end":47},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1809},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":232261,"byte_end":232280,"line_start":322,"line_end":322,"column_start":37,"column_end":56},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1809},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/intersperse.rs","byte_start":232825,"byte_end":232842,"line_start":347,"line_end":347,"column_start":26,"column_end":43},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1833},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":233997,"byte_end":234003,"line_start":21,"line_end":21,"column_start":48,"column_end":54},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4561},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":234468,"byte_end":234474,"line_start":41,"line_end":41,"column_start":33,"column_end":39},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4561},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":234937,"byte_end":234943,"line_start":59,"line_end":59,"column_start":40,"column_end":46},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4561},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":235783,"byte_end":235791,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1875},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":236463,"byte_end":236477,"line_start":113,"line_end":113,"column_start":29,"column_end":43},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":237667,"byte_end":237681,"line_start":163,"line_end":163,"column_start":16,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":237878,"byte_end":237892,"line_start":172,"line_end":172,"column_start":35,"column_end":49},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1905},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":238597,"byte_end":238611,"line_start":197,"line_end":197,"column_start":44,"column_end":58},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1905},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":239007,"byte_end":239019,"line_start":215,"line_end":215,"column_start":33,"column_end":45},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1934},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":239700,"byte_end":239709,"line_start":247,"line_end":247,"column_start":25,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4570},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":240612,"byte_end":240621,"line_start":283,"line_end":283,"column_start":34,"column_end":43},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4570},"to":{"krate":2,"index":3380}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/update.rs","byte_start":240727,"byte_end":240736,"line_start":289,"line_end":289,"column_start":36,"column_end":45},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4570},"to":{"krate":2,"index":3360}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/noop.rs","byte_start":241079,"byte_end":241091,"line_start":5,"line_end":5,"column_start":6,"column_end":18},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/noop.rs","byte_start":241175,"byte_end":241187,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1972},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/noop.rs","byte_start":241531,"byte_end":241543,"line_start":29,"line_end":29,"column_start":23,"column_end":35},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1972},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/noop.rs","byte_start":241883,"byte_end":241895,"line_start":48,"line_end":48,"column_start":34,"column_end":46},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1972},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/noop.rs","byte_start":242082,"byte_end":242093,"line_start":60,"line_end":60,"column_start":22,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1997},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/rev.rs","byte_start":242865,"byte_end":242868,"line_start":25,"line_end":25,"column_start":30,"column_end":33},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4583},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/rev.rs","byte_start":243197,"byte_end":243200,"line_start":41,"line_end":41,"column_start":37,"column_end":40},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4583},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/rev.rs","byte_start":243905,"byte_end":243913,"line_start":66,"line_end":66,"column_start":45,"column_end":53},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2020},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/rev.rs","byte_start":244412,"byte_end":244423,"line_start":88,"line_end":88,"column_start":22,"column_end":33},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2030},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":245875,"byte_end":245881,"line_start":29,"line_end":29,"column_start":30,"column_end":36},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4592},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":246210,"byte_end":246216,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4592},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":246891,"byte_end":246899,"line_start":69,"line_end":69,"column_start":45,"column_end":53},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2062},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":247518,"byte_end":247532,"line_start":94,"line_end":94,"column_start":22,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2072},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":249053,"byte_end":249059,"line_start":156,"line_end":156,"column_start":30,"column_end":36},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4602},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":249388,"byte_end":249394,"line_start":172,"line_end":172,"column_start":37,"column_end":43},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4602},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":250069,"byte_end":250077,"line_start":196,"line_end":196,"column_start":45,"column_end":53},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2101},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/len.rs","byte_start":250696,"byte_end":250710,"line_start":221,"line_end":221,"column_start":22,"column_end":36},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2111},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":251922,"byte_end":251933,"line_start":24,"line_end":24,"column_start":31,"column_end":42},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2140},"to":{"krate":2,"index":1437}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":251955,"byte_end":251966,"line_start":26,"line_end":26,"column_start":15,"column_end":26},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":252086,"byte_end":252097,"line_start":32,"line_end":32,"column_start":28,"column_end":39},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2140},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":252542,"byte_end":252553,"line_start":52,"line_end":52,"column_start":37,"column_end":48},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2140},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":252768,"byte_end":252779,"line_start":64,"line_end":64,"column_start":24,"column_end":35},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2140},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/sum.rs","byte_start":252952,"byte_end":252961,"line_start":77,"line_end":77,"column_start":26,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2165},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":253889,"byte_end":253904,"line_start":24,"line_end":24,"column_start":31,"column_end":46},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2189},"to":{"krate":2,"index":1437}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":253926,"byte_end":253941,"line_start":26,"line_end":26,"column_start":15,"column_end":30},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":254069,"byte_end":254084,"line_start":32,"line_end":32,"column_start":28,"column_end":43},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2189},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":254565,"byte_end":254580,"line_start":52,"line_end":52,"column_start":37,"column_end":52},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2189},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":254811,"byte_end":254826,"line_start":64,"line_end":64,"column_start":24,"column_end":39},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2189},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/product.rs","byte_start":255011,"byte_end":255024,"line_start":77,"line_end":77,"column_start":26,"column_end":39},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2214},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":256228,"byte_end":256234,"line_start":27,"line_end":27,"column_start":37,"column_end":43},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4612},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":256682,"byte_end":256688,"line_start":45,"line_end":45,"column_start":44,"column_end":50},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4612},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":257338,"byte_end":257346,"line_start":69,"line_end":69,"column_start":53,"column_end":61},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2249},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":257893,"byte_end":257907,"line_start":91,"line_end":91,"column_start":29,"column_end":43},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2259},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":258769,"byte_end":258783,"line_start":130,"line_end":130,"column_start":9,"column_end":23},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":258901,"byte_end":258915,"line_start":136,"line_end":136,"column_start":36,"column_end":50},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2274},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":259500,"byte_end":259514,"line_start":158,"line_end":158,"column_start":45,"column_end":59},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2274},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/cloned.rs","byte_start":259840,"byte_end":259852,"line_start":176,"line_end":176,"column_start":34,"column_end":46},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2296},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":260800,"byte_end":260807,"line_start":22,"line_end":22,"column_start":48,"column_end":55},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4621},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":261279,"byte_end":261286,"line_start":42,"line_end":42,"column_start":33,"column_end":40},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4621},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":261746,"byte_end":261753,"line_start":60,"line_end":60,"column_start":40,"column_end":47},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4621},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":262598,"byte_end":262606,"line_start":89,"line_end":89,"column_start":48,"column_end":56},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2337},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":263271,"byte_end":263286,"line_start":115,"line_end":115,"column_start":29,"column_end":44},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2349},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":264424,"byte_end":264439,"line_start":163,"line_end":163,"column_start":16,"column_end":31},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":264640,"byte_end":264655,"line_start":172,"line_end":172,"column_start":35,"column_end":50},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2367},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":265374,"byte_end":265389,"line_start":199,"line_end":199,"column_start":44,"column_end":59},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2367},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/inspect.rs","byte_start":265777,"byte_end":265790,"line_start":217,"line_end":217,"column_start":33,"column_end":46},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2396},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/while_some.rs","byte_start":267034,"byte_end":267043,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4630},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/while_some.rs","byte_start":267674,"byte_end":267691,"line_start":54,"line_end":54,"column_start":40,"column_end":57},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2426},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/while_some.rs","byte_start":268423,"byte_end":268440,"line_start":81,"line_end":81,"column_start":49,"column_end":66},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2426},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/while_some.rs","byte_start":268816,"byte_end":268831,"line_start":99,"line_end":99,"column_start":38,"column_end":53},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2447},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":270864,"byte_end":270874,"line_start":54,"line_end":54,"column_start":31,"column_end":41},"kind":{"Impl":{"id":252}},"from":{"krate":5,"index":282},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":271189,"byte_end":271199,"line_start":65,"line_end":65,"column_start":39,"column_end":49},"kind":{"Impl":{"id":253}},"from":{"krate":5,"index":282},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":271530,"byte_end":271538,"line_start":77,"line_end":77,"column_start":39,"column_end":47},"kind":{"Impl":{"id":254}},"from":{"krate":5,"index":926},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":271864,"byte_end":271872,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"kind":{"Impl":{"id":255}},"from":{"krate":5,"index":926},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":272208,"byte_end":272216,"line_start":102,"line_end":102,"column_start":31,"column_end":39},"kind":{"Impl":{"id":256}},"from":{"krate":5,"index":4005},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":272503,"byte_end":272511,"line_start":113,"line_end":113,"column_start":39,"column_end":47},"kind":{"Impl":{"id":257}},"from":{"krate":5,"index":4005},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":272816,"byte_end":272823,"line_start":125,"line_end":125,"column_start":42,"column_end":49},"kind":{"Impl":{"id":258}},"from":{"krate":1,"index":6116},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":273299,"byte_end":273306,"line_start":139,"line_end":139,"column_start":54,"column_end":61},"kind":{"Impl":{"id":259}},"from":{"krate":1,"index":6116},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":273710,"byte_end":273717,"line_start":153,"line_end":153,"column_start":34,"column_end":41},"kind":{"Impl":{"id":260}},"from":{"krate":1,"index":6142},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":274072,"byte_end":274079,"line_start":165,"line_end":165,"column_start":42,"column_end":49},"kind":{"Impl":{"id":261}},"from":{"krate":1,"index":6142},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":274443,"byte_end":274453,"line_start":178,"line_end":178,"column_start":31,"column_end":41},"kind":{"Impl":{"id":262}},"from":{"krate":5,"index":1720},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":275056,"byte_end":275066,"line_start":200,"line_end":200,"column_start":39,"column_end":49},"kind":{"Impl":{"id":263}},"from":{"krate":5,"index":1720},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":275373,"byte_end":275379,"line_start":212,"line_end":212,"column_start":31,"column_end":37},"kind":{"Impl":{"id":264}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":276319,"byte_end":276325,"line_start":240,"line_end":240,"column_start":39,"column_end":45},"kind":{"Impl":{"id":265}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":276604,"byte_end":276610,"line_start":249,"line_end":249,"column_start":38,"column_end":44},"kind":{"Impl":{"id":266}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":276896,"byte_end":276902,"line_start":258,"line_end":258,"column_start":33,"column_end":39},"kind":{"Impl":{"id":267}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":277203,"byte_end":277209,"line_start":267,"line_end":267,"column_start":43,"column_end":49},"kind":{"Impl":{"id":268}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":278118,"byte_end":278126,"line_start":298,"line_end":298,"column_start":31,"column_end":39},"kind":{"Impl":{"id":269}},"from":{"krate":5,"index":1985},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":278431,"byte_end":278439,"line_start":309,"line_end":309,"column_start":39,"column_end":47},"kind":{"Impl":{"id":270}},"from":{"krate":5,"index":1985},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/extend.rs","byte_start":278871,"byte_end":278874,"line_start":324,"line_end":324,"column_start":39,"column_end":42},"kind":{"Impl":{"id":271}},"from":{"krate":5,"index":3569},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":279350,"byte_end":279354,"line_start":7,"line_end":7,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1446},"to":{"krate":0,"index":2612}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":279357,"byte_end":279361,"line_start":7,"line_end":7,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":2612}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":281887,"byte_end":281892,"line_start":86,"line_end":86,"column_start":44,"column_end":49},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2637},"to":{"krate":0,"index":2612}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":282821,"byte_end":282830,"line_start":121,"line_end":121,"column_start":27,"column_end":36},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2653},"to":{"krate":0,"index":2612}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":283935,"byte_end":283947,"line_start":161,"line_end":161,"column_start":33,"column_end":45},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2671},"to":{"krate":0,"index":2612}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":284595,"byte_end":284601,"line_start":188,"line_end":188,"column_start":45,"column_end":51},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2684},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":286035,"byte_end":286041,"line_start":237,"line_end":237,"column_start":42,"column_end":48},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2701},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":286989,"byte_end":287002,"line_start":276,"line_end":276,"column_start":41,"column_end":54},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2719},"to":{"krate":0,"index":885}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":288214,"byte_end":288227,"line_start":319,"line_end":319,"column_start":50,"column_end":63},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2719},"to":{"krate":0,"index":904}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":288907,"byte_end":288918,"line_start":348,"line_end":348,"column_start":39,"column_end":50},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2747},"to":{"krate":0,"index":893}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/unzip.rs","byte_start":289684,"byte_end":289696,"line_start":381,"line_end":381,"column_start":40,"column_end":52},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2765},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":290725,"byte_end":290731,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":291580,"byte_end":291586,"line_start":55,"line_end":55,"column_start":30,"column_end":36},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4639},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":292009,"byte_end":292023,"line_start":73,"line_end":73,"column_start":45,"column_end":59},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2793},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":292965,"byte_end":292972,"line_start":111,"line_end":111,"column_start":30,"column_end":37},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4648},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":293284,"byte_end":293291,"line_start":127,"line_end":127,"column_start":37,"column_end":44},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4648},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":293860,"byte_end":293875,"line_start":154,"line_end":154,"column_start":36,"column_end":51},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2817},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":294523,"byte_end":294527,"line_start":177,"line_end":177,"column_start":29,"column_end":33},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2827},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":294905,"byte_end":294909,"line_start":196,"line_end":196,"column_start":40,"column_end":44},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2827},"to":{"krate":2,"index":3360}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/repeat.rs","byte_start":295038,"byte_end":295042,"line_start":203,"line_end":203,"column_start":38,"column_end":42},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2827},"to":{"krate":2,"index":3380}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":295845,"byte_end":295850,"line_start":34,"line_end":34,"column_start":25,"column_end":30},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2856},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":295940,"byte_end":295945,"line_start":40,"line_end":40,"column_start":30,"column_end":35},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2856},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":296077,"byte_end":296082,"line_start":46,"line_end":46,"column_start":36,"column_end":41},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2856},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":296363,"byte_end":296368,"line_start":60,"line_end":60,"column_start":43,"column_end":48},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2856},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/empty.rs","byte_start":296838,"byte_end":296851,"line_start":81,"line_end":81,"column_start":28,"column_end":41},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2878},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/once.rs","byte_start":298151,"byte_end":298155,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4658},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/once.rs","byte_start":298436,"byte_end":298440,"line_start":48,"line_end":48,"column_start":43,"column_end":47},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4658},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":29930,"byte_end":29931,"line_start":239,"line_end":239,"column_start":67,"column_end":68},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2925},"to":{"krate":0,"index":2918}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":31439,"byte_end":31440,"line_start":286,"line_end":286,"column_start":70,"column_end":71},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2936},"to":{"krate":0,"index":2929}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":32328,"byte_end":32333,"line_start":311,"line_end":311,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":32336,"byte_end":32340,"line_start":311,"line_end":311,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":71077,"byte_end":71078,"line_start":1426,"line_end":1426,"column_start":52,"column_end":53},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3053},"to":{"krate":0,"index":2914}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/iter/mod.rs","byte_start":71429,"byte_end":71445,"line_start":1440,"line_end":1440,"column_start":36,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":2940},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":299809,"byte_end":299815,"line_start":27,"line_end":27,"column_start":40,"column_end":46},"kind":{"Impl":{"id":300}},"from":{"krate":2,"index":32907},"to":{"krate":0,"index":2914}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":299988,"byte_end":299996,"line_start":36,"line_end":36,"column_start":36,"column_end":44},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4667},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":300286,"byte_end":300294,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4667},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":301446,"byte_end":301450,"line_start":89,"line_end":89,"column_start":29,"column_end":33},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4676},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":302868,"byte_end":302882,"line_start":144,"line_end":144,"column_start":28,"column_end":42},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3166},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/option.rs","byte_start":303499,"byte_end":303505,"line_start":168,"line_end":168,"column_start":52,"column_end":58},"kind":{"Impl":{"id":309}},"from":{"krate":2,"index":32907},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/range.rs","byte_start":306033,"byte_end":306038,"line_start":49,"line_end":49,"column_start":34,"column_end":39},"kind":{"Impl":{"id":310}},"from":{"krate":2,"index":26067},"to":{"krate":0,"index":2914}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/range.rs","byte_start":306314,"byte_end":306326,"line_start":64,"line_end":64,"column_start":26,"column_end":38},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3202},"to":{"krate":2,"index":3392}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/result.rs","byte_start":310842,"byte_end":310848,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"kind":{"Impl":{"id":312}},"from":{"krate":2,"index":32998},"to":{"krate":0,"index":2914}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/result.rs","byte_start":311266,"byte_end":311270,"line_start":41,"line_end":41,"column_start":29,"column_end":33},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4903},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/result.rs","byte_start":312469,"byte_end":312475,"line_start":88,"line_end":88,"column_start":58,"column_end":64},"kind":{"Impl":{"id":320}},"from":{"krate":2,"index":32998},"to":{"krate":0,"index":3117}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mergesort.rs","byte_start":341651,"byte_end":341661,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":3262},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mergesort.rs","byte_start":344582,"byte_end":344588,"line_start":101,"line_end":101,"column_start":22,"column_end":28},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3273},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mergesort.rs","byte_start":344837,"byte_end":344850,"line_start":113,"line_end":113,"column_start":22,"column_end":35},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3279},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mergesort.rs","byte_start":348626,"byte_end":348635,"line_start":216,"line_end":216,"column_start":22,"column_end":31},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3289},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mergesort.rs","byte_start":360064,"byte_end":360069,"line_start":514,"line_end":514,"column_start":22,"column_end":27},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3311},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/quicksort.rs","byte_start":369297,"byte_end":369308,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3337},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/quicksort.rs","byte_start":369538,"byte_end":369544,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3344},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/quicksort.rs","byte_start":369751,"byte_end":369761,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3350},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":328590,"byte_end":328594,"line_start":439,"line_end":439,"column_start":32,"column_end":36},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4969},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":328721,"byte_end":328725,"line_start":445,"line_end":445,"column_start":51,"column_end":55},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4969},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":329046,"byte_end":329050,"line_start":459,"line_end":459,"column_start":58,"column_end":62},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4969},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":329551,"byte_end":329563,"line_start":481,"line_end":481,"column_start":43,"column_end":55},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":3505},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":330136,"byte_end":330142,"line_start":503,"line_end":503,"column_start":32,"column_end":38},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4977},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":330271,"byte_end":330277,"line_start":509,"line_end":509,"column_start":51,"column_end":57},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4977},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":330600,"byte_end":330606,"line_start":523,"line_end":523,"column_start":58,"column_end":64},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4977},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":331281,"byte_end":331295,"line_start":549,"line_end":549,"column_start":43,"column_end":57},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":3535},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":332081,"byte_end":332088,"line_start":579,"line_end":579,"column_start":32,"column_end":39},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":332218,"byte_end":332225,"line_start":585,"line_end":585,"column_start":51,"column_end":58},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4986},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":332548,"byte_end":332555,"line_start":599,"line_end":599,"column_start":58,"column_end":65},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4986},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":333281,"byte_end":333296,"line_start":626,"line_end":626,"column_start":43,"column_end":58},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":3566},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":334136,"byte_end":334143,"line_start":656,"line_end":656,"column_start":51,"column_end":58},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4995},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":334468,"byte_end":334475,"line_start":670,"line_end":670,"column_start":58,"column_end":65},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4995},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":334986,"byte_end":335001,"line_start":692,"line_end":692,"column_start":43,"column_end":58},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":3593},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":335615,"byte_end":335624,"line_start":714,"line_end":714,"column_start":51,"column_end":60},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":5003},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":335951,"byte_end":335960,"line_start":728,"line_end":728,"column_start":58,"column_end":67},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5003},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":336645,"byte_end":336662,"line_start":754,"line_end":754,"column_start":43,"column_end":60},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":3619},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":337435,"byte_end":337440,"line_start":783,"line_end":783,"column_start":36,"column_end":41},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":3631},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":337591,"byte_end":337596,"line_start":789,"line_end":789,"column_start":36,"column_end":41},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":3631},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":337814,"byte_end":337819,"line_start":797,"line_end":797,"column_start":40,"column_end":45},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":3631},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":339314,"byte_end":339322,"line_start":855,"line_end":855,"column_start":36,"column_end":44},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":3665},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/slice/mod.rs","byte_start":339543,"byte_end":339551,"line_start":863,"line_end":863,"column_start":40,"column_end":48},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":3665},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":406327,"byte_end":406332,"line_start":167,"line_end":167,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":3715}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":406335,"byte_end":406339,"line_start":167,"line_end":167,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1446},"to":{"krate":0,"index":3715}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":406342,"byte_end":406346,"line_start":167,"line_end":167,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":3715}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":407353,"byte_end":407355,"line_start":207,"line_end":207,"column_start":54,"column_end":56},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":3731},"to":{"krate":0,"index":3715}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":408201,"byte_end":408206,"line_start":246,"line_end":246,"column_start":32,"column_end":37},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5015},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":408461,"byte_end":408474,"line_start":256,"line_end":256,"column_start":33,"column_end":46},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":3738},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":409241,"byte_end":409246,"line_start":287,"line_end":287,"column_start":23,"column_end":28},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":409447,"byte_end":409452,"line_start":296,"line_end":296,"column_start":44,"column_end":49},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5024},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":411101,"byte_end":411116,"line_start":355,"line_end":355,"column_start":23,"column_end":38},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":411322,"byte_end":411345,"line_start":364,"line_end":364,"column_start":36,"column_end":59},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":3772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":411653,"byte_end":411668,"line_start":373,"line_end":373,"column_start":44,"column_end":59},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5037},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":412011,"byte_end":412034,"line_start":384,"line_end":384,"column_start":58,"column_end":81},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":3772},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":412854,"byte_end":412859,"line_start":415,"line_end":415,"column_start":32,"column_end":37},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5050},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/str.rs","byte_start":413515,"byte_end":413530,"line_start":439,"line_end":439,"column_start":32,"column_end":47},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5060},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":414290,"byte_end":414293,"line_start":18,"line_end":18,"column_start":40,"column_end":43},"kind":{"Impl":{"id":365}},"from":{"krate":5,"index":3569},"to":{"krate":0,"index":2914}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":414466,"byte_end":414474,"line_start":27,"line_end":27,"column_start":36,"column_end":44},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5070},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":414766,"byte_end":414774,"line_start":41,"line_end":41,"column_start":43,"column_end":51},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5070},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":415894,"byte_end":415905,"line_start":77,"line_end":77,"column_start":43,"column_end":54},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":3836},"to":{"krate":0,"index":876}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":416548,"byte_end":416559,"line_start":95,"line_end":95,"column_start":39,"column_end":50},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3836},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":416907,"byte_end":416917,"line_start":108,"line_end":108,"column_start":36,"column_end":46},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":417224,"byte_end":417234,"line_start":121,"line_end":121,"column_start":47,"column_end":57},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":3360}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":417424,"byte_end":417434,"line_start":127,"line_end":127,"column_start":45,"column_end":55},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":3380}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/vec.rs","byte_start":417540,"byte_end":417550,"line_start":133,"line_end":133,"column_start":32,"column_end":42},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/par_either.rs","byte_start":417912,"byte_end":417918,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"kind":{"Impl":{"id":374}},"from":{"krate":28,"index":121},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/par_either.rs","byte_start":418438,"byte_end":418444,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"kind":{"Impl":{"id":375}},"from":{"krate":28,"index":121},"to":{"krate":0,"index":3057}},{"span":{"file_name":"/Users/ftf/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.1/src/par_either.rs","byte_start":419234,"byte_end":419240,"line_start":55,"line_end":55,"column_start":37,"column_end":43},"kind":{"Impl":{"id":376}},"from":{"krate":28,"index":121},"to":{"krate":0,"index":3121}}]}